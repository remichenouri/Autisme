{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"64yXPqUF9JmQ"},"outputs":[],"source":["!pip install -q streamlit pandas scikit-learn joblib\n","!pip install streamlit-shap shap\n","!pip install -q streamlit pyngrok\n","!pip install -q prince\n","from pyngrok import ngrok\n","ngrok.set_auth_token('2x7k3B4rM4RvdVemTEmJfcJOzx0_4UAtKKPM49PWF8LDBwTMT')\n","\n","!mkdir -p pages\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":424,"status":"ok","timestamp":1747318898314,"user":{"displayName":"R√©mi Chenouri","userId":"17434112223803583220"},"user_tz":-120},"id":"kzj0Rv7ULW_B","outputId":"aa148b72-7aca-44dc-ebdb-2998f27b199f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Writing Streamlit-Autisme.py\n"]}],"source":["%%writefile Streamlit-Autisme.py\n","from io import BytesIO\n","from lightgbm import LGBMClassifier\n","from PIL import Image\n","from scipy.stats import chi2_contingency, mannwhitneyu\n","from sklearn.compose import ColumnTransformer\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, confusion_matrix, classification_report\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from xgboost import XGBClassifier\n","import base64\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import pandas as pd\n","import pickle\n","import plotly.express as px\n","import plotly.graph_objects as go\n","import prince\n","import requests\n","import seaborn as sns\n","import streamlit as st\n","\n","\n","def get_img_with_href(img_url, target_url, as_banner=False):\n","    # Extraire l'ID du fichier de l'URL Google Drive\n","    if \"drive.google.com\" in img_url and \"/d/\" in img_url:\n","        file_id = img_url.split(\"/d/\")[1].split(\"/\")[0]\n","        img_url = f\"https://drive.google.com/uc?export=view&id={file_id}\"\n","\n","    try:\n","        # T√©l√©charger l'image avec un timeout explicite\n","        response = requests.get(img_url, timeout=10)\n","        response.raise_for_status()\n","\n","        # V√©rifier la taille du contenu\n","        if len(response.content) == 0:\n","            raise Exception(\"Contenu vide t√©l√©charg√©\")\n","\n","        # Tenter d'ouvrir l'image avec diff√©rents formats\n","        img = Image.open(BytesIO(response.content))\n","\n","        # Convertir l'image en base64\n","        buffered = BytesIO()\n","        img.save(buffered, format=\"PNG\")\n","        img_str = base64.b64encode(buffered.getvalue()).decode()\n","\n","        # AM√âLIORATION: Style pour que l'image s'adapte correctement au conteneur\n","        if as_banner:\n","            style = 'style=\"width:100%;height:auto;display:block;object-fit:cover;border-radius:10px;\"'\n","        else:\n","            style = 'style=\"width:100%;height:auto;display:block;object-fit:contain;margin:0 auto;padding:0;\"'\n","\n","\n","        # Cr√©er le HTML avec un div conteneur √† dimensionnement fixe\n","        container_style = 'style=\"width:100%; padding:10px; background-color:white; border-radius:10px; overflow:hidden; margin-bottom:20px;\"'\n","\n","        # HTML am√©lior√© avec div conteneur pour mieux contr√¥ler les dimensions\n","        html_code = f'<div {container_style}><a href=\"{target_url}\" target=\"_blank\" style=\"display:block; margin:0; padding:0; line-height:0;\"><img src=\"data:image/png;base64,{img_str}\" {style}></a></div>'\n","        return html_code\n","    except Exception as e:\n","        st.error(f\"Erreur lors du chargement de l'image: {str(e)}\")\n","        # Image de remplacement\n","        st.markdown('<div style=\"text-align: center; margin: 30px; padding: 50px; background-color: #f0f2f6; border-radius: 10px;\"><p style=\"font-size: 1.2rem;\">Image non disponible - Veuillez v√©rifier l\\'URL</p></div>', unsafe_allow_html=True)\n","        return \"\"\n","\n","\n","\n","    except Exception as e:\n","        st.error(f\"Erreur lors du chargement de l'image: {str(e)}\")\n","        # Image de remplacement\n","        st.markdown(\"\"\"\n","        <div style=\"text-align: center; margin: 30px; padding: 50px; background-color: #f0f2f6; border-radius: 10px;\">\n","            <p style=\"font-size: 1.2rem;\">Image non disponible - Veuillez v√©rifier l'URL</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","        return \"\"\n","\n","def get_question_text(question_number):\n","    questions_text = {\n","        1: \"Je remarque souvent de petits bruits que les autres ne remarquent pas.\",\n","        2: \"Je me concentre g√©n√©ralement davantage sur l'ensemble que sur les petits d√©tails.\",\n","        3: \"Je trouve facile de faire plusieurs choses en m√™me temps.\",\n","        4: \"S'il y a une interruption, je peux rapidement reprendre ce que je faisais.\",\n","        5: \"Je trouve facile de ¬´ lire entre les lignes ¬ª quand quelqu'un me parle.\",\n","        6: \"Je sais comment savoir si la personne qui m'√©coute commence √† s'ennuyer.\",\n","        7: \"Quand je lis une histoire, j'ai du mal √† comprendre les intentions des personnages.\",\n","        8: \"J'aime collecter des informations sur des cat√©gories de choses.\",\n","        9: \"Je trouve facile de comprendre ce que quelqu'un pense ou ressent rien qu'en regardant son visage.\",\n","        10: \"J'ai du mal √† comprendre les intentions des gens.\"\n","    }\n","    return questions_text.get(question_number, \"Question non d√©finie\")\n","\n","# Configuration de la page\n","st.set_page_config(\n","    page_title=\"D√©pistage Autisme\",\n","    page_icon=\"üß©\",\n","    layout=\"wide\",\n","    initial_sidebar_state=\"expanded\"\n",")\n","\n","def set_custom_theme():\n","    custom_theme = \"\"\"\n","    <style>\n","    /* Variables globales */\n","    :root {\n","        --primary: #3498db;\n","        --secondary: #2ecc71;\n","        --background: #f0f2f6;\n","        --card-bg: white;\n","        --text: #2c3e50;\n","    }\n","\n","    /* Styles g√©n√©raux du conteneur */\n","    [data-testid=\"stAppViewContainer\"] {\n","        background-color: var(--background);\n","    }\n","\n","    h1, h2, h3, h4, h5, h6 {\n","        color: var(--text);\n","        font-weight: 600;\n","        font-family: 'Segoe UI', sans-serif;\n","    }\n","\n","    /* Correction de la navigation - SOLUTION PRINCIPALE */\n","    [data-testid=\"stSidebar\"] {\n","        background-color: #f5f7fa;\n","        border-right: 2px solid var(--primary);\n","        padding-top: 2rem;\n","        width: 250px !important; /* Largeur augment√©e */\n","    }\n","    [data-testid=\"stSidebar\"] label {\n","    margin-bottom: 14px !important;\n","    padding: 8px 12px !important;\n","    border-radius: 8px;\n","    transition: background 0.2s;\n","    }\n","    [data-testid=\"stSidebar\"] label:hover {\n","        background: #eaf2f8 !important;\n","    }\n","    .sidebar-title {\n","        margin-bottom: 2rem !important;\n","    }\n","\n","\n","    /* Assurer que le contenu est correctement dimensionn√© */\n","    [data-testid=\"stSidebarContent\"] {\n","        width: 100%;\n","        overflow: auto;\n","        background-color: #f5f7fa !important;\n","    }\n","\n","    /* Am√©lioration du texte dans la sidebar */\n","    [data-testid=\"stSidebar\"] label,\n","    [data-testid=\"stSidebar\"] div,\n","    [data-testid=\"stSidebar\"] p,\n","    [data-testid=\"stSidebar\"] span {\n","        color: #2c3e50 !important;\n","        font-weight: 500 !important;\n","        font-size: 1rem !important;\n","        white-space: normal !important;\n","        overflow-wrap: break-word !important;\n","        word-wrap: break-word !important;\n","    }\n","\n","    /* Am√©lioration sp√©cifique pour les expanders */\n","    [data-testid=\"stSidebar\"] .streamlit-expanderHeader {\n","        white-space: normal !important;\n","        overflow-wrap: break-word !important;\n","        word-wrap: break-word !important;\n","        hyphens: auto !important;\n","        padding-right: 10px !important;\n","    }\n","\n","    /* Titre de la sidebar plus visible */\n","    .sidebar-title {\n","        font-size: 1.5rem;\n","        color: #3498db;\n","        margin-bottom: 1.5rem;\n","        text-align: center;\n","        border-bottom: 2px solid #3498db;\n","        padding-bottom: 0.5rem;\n","    }\n","\n","    /* Am√©lioration pour le menu de radiobuttons */\n","    [data-testid=\"stSidebar\"] div[role=\"radiogroup\"] label {\n","        color: #2c3e50 !important;\n","        font-weight: 500 !important;\n","        font-size: 0.95rem !important;\n","        margin-bottom: 5px !important;\n","        white-space: normal !important;\n","        overflow-wrap: break-word !important;\n","        line-height: 1.4 !important;\n","        padding: 5px 10px !important;\n","        display: block !important;\n","        width: 100% !important;\n","    }\n","\n","    .sidebar .sidebar-content {\n","        background-color: #f5f7fa !important;\n","        border-right: 2px solid #3498db !important;\n","    }\n","\n","    .sidebar .sidebar-content .streamlit-expanderHeader,\n","    .sidebar .sidebar-content label,\n","    .sidebar .sidebar-content div,\n","    .sidebar .sidebar-content p,\n","    .sidebar .sidebar-content span {\n","        color: #2c3e50 !important;\n","        font-weight: 500 !important;\n","    }\n","\n","    .sidebar .sidebar-content label {\n","        color: #2c3e50 !important;\n","        font-weight: 500 !important;\n","        font-size: 1rem !important;\n","    }\n","\n","    /* Styles des cartes et conteneurs */\n","    .header-container {\n","        display: flex;\n","        align-items: center;\n","        background: linear-gradient(90deg, var(--primary), var(--secondary));\n","        padding: 1.5rem;\n","        border-radius: 10px;\n","        color: white;\n","        margin-bottom: 1.5rem;\n","    }\n","\n","    .app-title {\n","        font-size: 2.2rem;\n","        font-weight: bold;\n","        margin-left: 1rem;\n","    }\n","\n","    .puzzle-title {\n","        display: flex;\n","        align-items: center;\n","        gap: 15px;\n","        font-size: 2.2rem;\n","        color: var(--primary);\n","        font-weight: bold;\n","        margin-bottom: 1rem;\n","    }\n","\n","    .puzzle-icon {\n","        font-size: 2.2rem;\n","    }\n","\n","    .main .block-container {\n","        padding-top: 0.7rem !important;\n","        padding-bottom: 0.7rem !important;\n","    }\n","\n","    [data-testid=\"stVerticalBlock\"] {\n","        gap: 0.5rem !important;\n","    }\n","\n","    .element-container {\n","        margin-bottom: 0.5rem !important;\n","    }\n","\n","    .css-1544g2n.e1fqkh3o4 {\n","        padding-top: 2rem !important;\n","        padding-bottom: 0.5rem !important;\n","    }\n","\n","    /* Styles des info-cards */\n","    .info-card {\n","        background-color: var(--card-bg);\n","        border-radius: 12px;\n","        padding: 1rem !important;\n","        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n","        transition: transform 0.3s ease, box-shadow 0.3s ease;\n","        border-top: 5px solid var(--primary);\n","        margin-bottom: 10px !important;\n","    }\n","\n","    .info-card:hover {\n","        transform: translateY(-5px);\n","        box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);\n","    }\n","\n","    .card-title {\n","        color: var(--primary);\n","        font-size: 1.4rem;\n","        font-weight: bold;\n","        margin-bottom: 1rem;\n","        border-bottom: 2px solid var(--primary);\n","        padding-bottom: 0.5rem;\n","    }\n","\n","    /* Styles des questions et formulaires */\n","    .question-container {\n","        background-color: white;\n","        padding: 12px 15px !important;\n","        border-radius: 12px;\n","        margin-bottom: 12px !important;\n","        box-shadow: 0 3px 10px rgba(0,0,0,0.08);\n","        border-left: 4px solid var(--primary);\n","        transition: transform 0.2s ease, box-shadow 0.2s ease;\n","    }\n","\n","    .question-container:hover {\n","        transform: translateY(-3px);\n","        box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n","    }\n","\n","    .question-text {\n","        font-size: 1.1rem;\n","        font-weight: 500;\n","        color: var(--text);\n","        margin-bottom: 15px;\n","        line-height: 1.5;\n","    }\n","\n","    .questionnaire-title {\n","        color: var(--primary);\n","        font-size: 2rem;\n","        margin-bottom: 2rem;\n","        padding-bottom: 0.8rem;\n","        border-bottom: 2px solid var(--primary);\n","    }\n","\n","    /* Styles des radiobuttons */\n","    div[role=\"radiogroup\"] {\n","        display: flex;\n","        flex-direction: row;\n","        flex-wrap: wrap;\n","        gap: 5px !important;\n","        margin-top: 10px;\n","        margin-bottom: 15px !important;\n","    }\n","\n","    div[role=\"radiogroup\"] label {\n","    color: #2c3e50 !important;  /* Texte fonc√© */\n","    padding-right: 15px !important;\n","    margin-bottom: 5px !important;\n","    font-weight: 500 !important;\n","    font-size: 1rem !important;\n","    white-space: normal !important;\n","    overflow-wrap: break-word !important;\n","    line-height: 1.4 !important;\n","    padding: 5px 10px !important;\n","    display: block !important;\n","    width: 100% !important;\n","}\n","\n","\n","    div[role=\"radiogroup\"] label > div:first-child {\n","        display: none !important;\n","    }\n","\n","    input[type=\"radio\"] + div {\n","        background: #f5f7fa !important;\n","        color: var(--text);\n","        border-radius: 38px !important;\n","        padding: 10px 20px !important;\n","        border: 1px solid #dfe4ea;\n","        transition: all 0.3s ease;\n","        font-weight: 500;\n","    }\n","\n","\n","    input[type=\"radio\"] + div:hover {\n","        background: #e9f0ff !important;\n","        border-color: var(--primary);\n","        transform: translateY(-1px);\n","    }\n","\n","    /* Styles des boutons et CTA */\n","    .cta-button {\n","        background: linear-gradient(135deg, var(--primary), #2980b9);\n","        color: white;\n","        padding: 0.9rem 1.5rem;\n","        border-radius: 30px;\n","        font-weight: bold;\n","        text-align: center;\n","        display: inline-block;\n","        text-decoration: none;\n","        transition: all 0.3s ease;\n","        box-shadow: 0 4px 10px rgba(52, 152, 219, 0.3);\n","        width: 80%;\n","    }\n","\n","    .cta-button:hover {\n","        background: linear-gradient(135deg, #2980b9, var(--primary));\n","        box-shadow: 0 6px 15px rgba(52, 152, 219, 0.4);\n","        transform: translateY(-2px);\n","    }\n","\n","    .stButton > button {\n","        width: 100%;\n","        padding: 0.8rem 1rem !important;\n","        font-size: 1.1rem !important;\n","        margin-top: 1rem;\n","    }\n","\n","    /* Styles des expanders et tabs */\n","    .streamlit-expanderHeader {\n","        background-color: #f5f7fa;\n","        border-radius: 8px;\n","        font-weight: 600;\n","        padding: 10px 15px !important;\n","        border-left: 4px solid var(--primary);\n","        transition: all 0.2s ease;\n","    }\n","\n","    .streamlit-expanderHeader:hover {\n","        background-color: #eef1f5;\n","        transform: translateX(2px);\n","    }\n","\n","    .stTabs [data-baseweb=\"tab-list\"] {\n","        gap: 2px;\n","    }\n","\n","    .stTabs [data-baseweb=\"tab\"] {\n","        height: 40px;\n","        white-space: pre-wrap;\n","        background-color: #f5f7fa;\n","        border-radius: 5px 5px 0 0;\n","        gap: 1px;\n","        padding-left: 15px;\n","        padding-right: 15px;\n","    }\n","\n","    .stTabs [aria-selected=\"true\"] {\n","        background-color: var(--primary) !important;\n","        color: white !important;\n","    }\n","\n","    /* Styles divers */\n","    [data-testid=\"stDataFrame\"] {\n","        border-radius: 8px;\n","        overflow: hidden;\n","        box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n","    }\n","\n","    [data-testid=\"stMetricValue\"] {\n","        font-weight: 600;\n","        color: var(--primary);\n","        font-size: 1.2rem;\n","    }\n","\n","    [data-testid=\"stMetricDelta\"] {\n","        font-size: 0.9rem;\n","    }\n","\n","    div[data-baseweb=\"select\"] > div {\n","        border-radius: 8px;\n","        background-color: white;\n","        transition: all 0.2s ease;\n","    }\n","\n","    div[data-baseweb=\"select\"] > div:hover {\n","        border-color: var(--primary);\n","    }\n","\n","    pre {\n","        white-space: pre-wrap;\n","        word-wrap: break-word;\n","        overflow-wrap: break-word;\n","        overflow-x: auto;\n","        max-width: 100%;\n","        font-size: 0.9rem;\n","        color: #2c3e50;\n","    }\n","\n","    .structure-donnees pre {\n","        background-color: #ffffff;\n","        padding: 15px;\n","        border-radius: 5px;\n","        font-family: 'Courier New', monospace;\n","        border: 1px solid #d0d0d0;\n","        line-height: 1.6;\n","        box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n","    }\n","\n","    .fade-in {\n","        animation: fadeIn 0.8s ease-in-out;\n","    }\n","\n","    @keyframes fadeIn {\n","        from { opacity: 0; transform: translateY(10px); }\n","        to { opacity: 1; transform: translateY(0); }\n","    }\n","\n","    .footer {\n","        background-color: #f0f2f6;\n","        padding: 1rem;\n","        text-align: center;\n","        border-top: 2px solid #3498db;\n","        margin-top: 2rem;\n","        border-radius: 10px;\n","    }\n","\n","    .sidebar .sidebar-content .streamlit-expanderHeader {\n","        white-space: normal !important;\n","        overflow-wrap: break-word !important;\n","        word-wrap: break-word !important;\n","        hyphens: auto !important;\n","        padding-right: 10px !important;\n","    }\n","\n","    .sidebar .sidebar-content label {\n","        color: #2c3e50 !important;\n","        font-weight: 500 !important;\n","        font-size: 1rem !important;\n","    }\n","\n","    .sidebar .sidebar-content div[role=\"radiogroup\"] label {\n","        padding-right: 15px !important;\n","        margin-bottom: 5px !important;\n","        display: block !important;\n","        width: 100% !important;\n","    }\n","\n","    [data-testid=\"stSidebar\"][aria-expanded=\"true\"] > div:first-child {\n","        width: 320px;\n","        min-width: 320px;\n","    }\n","    [data-testid=\"stSidebar\"][aria-expanded=\"false\"] > div:first-child {\n","        width: 320px;\n","        min-width: 320px;\n","    }\n","\n","\n","    [data-testid=\"stSidebar\"] .css-1wvake5,\n","    [data-testid=\"stSidebar\"] .css-1v0mbdj,\n","    [data-testid=\"stSidebar\"] label {\n","        white-space: normal !important;\n","        word-break: break-word !important;\n","        font-size: 1.1rem !important;\n","        font-weight: 500 !important;\n","        padding: 8px 14px !important;\n","        margin-bottom: 10px !important;\n","        border-radius: 8px;\n","        color: #2c3e50 !important;\n","        background: none !important;\n","        transition: background 0.2s;\n","        display: block;\n","    }\n","\n","\n","    [data-testid=\"stSidebar\"] .css-1wvake5[aria-checked=\"true\"],\n","    [data-testid=\"stSidebar\"] .css-1v0mbdj[aria-checked=\"true\"],\n","    [data-testid=\"stSidebar\"] label[data-selected=\"true\"] {\n","        background: linear-gradient(90deg, #eaf6fb 60%, #e0f7fa 100%) !important;\n","        color: #0077b6 !important;\n","    }\n","\n","\n","    [data-testid=\"stSidebar\"] svg {\n","        margin-right: 10px;\n","        vertical-align: middle;\n","    }\n","    </style>\n","    \"\"\"\n","    st.markdown(custom_theme, unsafe_allow_html=True)\n","\n","\n","\n","set_custom_theme()\n","\n","# Chargement du dataset\n","@st.cache_data(ttl=3600)\n","def load_dataset():\n","    try:\n","        # Nouveaux IDs des datasets\n","        ds1_id = '1ai1QlLzn0uo-enw4IzC53jJ8qoPc845G'  # dataset 1\n","        ds2_id = '1MOEhPxMNZH8LvXahvYAKiVFb9t8vAxaE'  # dataset 2\n","        ds3_id = '12B-scaR0TF7TuJzelIqmlxXDjnew67-K'  # dataset 3\n","        ds4_id = '1U9buLTKR_XuLWu9l3SOgvF6d9cS_YTFO'  # dataset 4\n","        ds5_id = '1NdXYppnmiheLFtvrdRHDk-W-zHKO0wYp'  # dataset 5\n","\n","        final_id = '1mm6sRacDmoL941POmydQgzdVAi9lFPit'  # Dataset final\n","\n","        # Chargement du dataset principal (dataset final)\n","        url_final = f'https://drive.google.com/uc?export=download&id={final_id}'\n","        df = pd.read_csv(url_final)\n","\n","\n","        # Nettoyage et pr√©paration des donn√©es\n","        if 'Unnamed: 0' in df.columns:\n","            df = df.drop(columns=['Unnamed: 0'])\n","        if 'TSA' in df.columns:\n","            df['TSA'] = df['TSA'].str.title()\n","        elif 'tsa' in df.columns:\n","            df.rename(columns={'tsa': 'TSA'}, inplace=True)\n","            df['TSA'] = df['TSA'].str.title()\n","        if 'Genre' in df.columns:\n","            df['Genre'] = df['Genre'].str.capitalize()\n","        elif 'gender' in df.columns:\n","            df.rename(columns={'gender': 'Genre'}, inplace=True)\n","            df['Genre'] = df['Genre'].str.capitalize()\n","\n","        # Calcul du score AQ-10\n","        aq_columns = [col for col in df.columns if col.startswith('A') and col[1:].isdigit()]\n","        if aq_columns:\n","            df['Score_A10'] = df[aq_columns].sum(axis=1)\n","\n","\n","        if 'Statut_testeur' in df.columns:\n","            df['Statut_testeur'].fillna('Famille', inplace=True)\n","        else:\n","            df['Statut_testeur'] = 'Famille'\n","\n","\n","        df_stats = {\n","            'mean_by_tsa': df.groupby('TSA').mean(numeric_only=True) if 'TSA' in df.columns else pd.DataFrame(),\n","            'count_by_tsa': df.groupby('TSA').count() if 'TSA' in df.columns else pd.DataFrame(),\n","            'categorical_cols': df.select_dtypes(include=['object']).columns.tolist(),\n","            'numeric_cols': df.select_dtypes(exclude=['object']).columns.tolist()\n","        }\n","\n","        # Chargement des datasets individuels\n","        url_ds1 = f'https://drive.google.com/uc?export=download&id={ds1_id}'\n","        url_ds2 = f'https://drive.google.com/uc?export=download&id={ds2_id}'\n","        url_ds3 = f'https://drive.google.com/uc?export=download&id={ds3_id}'\n","        url_ds4 = f'https://drive.google.com/uc?export=download&id={ds4_id}'\n","        url_ds5 = f'https://drive.google.com/uc?export=download&id={ds5_id}'\n","\n","        df_ds1 = pd.read_csv(url_ds1)\n","        df_ds2 = pd.read_csv(url_ds2)\n","        df_ds3 = pd.read_csv(url_ds3)\n","        df_ds4 = pd.read_csv(url_ds4)\n","        df_ds5 = pd.read_csv(url_ds5)\n","\n","        return df, df_ds1, df_ds2, df_ds3, df_ds4, df_ds5, df_stats\n","    except Exception as e:\n","        st.error(f\"Erreur lors du chargement: {str(e)}\")\n","\n","        return pd.DataFrame(), pd.DataFrame(), pd.DataFrame(), pd.DataFrame(), pd.DataFrame(), pd.DataFrame(), {}\n","\n","\n","# Fonction de cache pour les visualisations\n","@st.cache_data\n","def create_plotly_figure(df, x=None, y=None, color=None, names=None, kind='histogram', title=None):\n","    \"\"\"Cr√©e une visualisation Plotly avec mise en cache\"\"\"\n","\n","    if color and color not in df.columns:\n","        color = None\n","\n","\n","    is_categorical_aq = x and isinstance(x, str) and x.startswith('A') and x[1:].isdigit() and len(x) <= 3\n","\n","    categorical_palette = {0: \"#3498db\", 1: \"#2ecc71\"}\n","\n","    try:\n","        if is_categorical_aq and kind in ['histogram', 'bar']:\n","\n","            counts = df[x].value_counts().reset_index()\n","            counts.columns = [x, 'count']\n","            fig = px.bar(counts, x=x, y='count',\n","                      color=x,\n","                      color_discrete_map=categorical_palette,\n","                      title=f\"Distribution de {x} (cat√©gorielle)\")\n","            fig.update_layout(xaxis_title=f\"Valeur de {x}\", yaxis_title=\"Nombre d'occurrences\")\n","        elif kind == 'histogram':\n","            fig = px.histogram(df, x=x, color=color, color_discrete_map=palette,\n","                            marginal=\"box\", nbins=20)\n","        elif kind == 'box':\n","            fig = px.box(df, x=x, y=y, color=color, color_discrete_map=palette,\n","                       points=\"all\", notched=True)\n","        elif kind == 'bar':\n","            fig = px.bar(df, x=x, y=y, color=color, color_discrete_map=palette)\n","        elif kind == 'scatter':\n","            fig = px.scatter(df, x=x, y=y, color=color, color_discrete_map=palette)\n","        elif kind == 'pie':\n","\n","            if names and isinstance(names, str) and names.startswith('A') and names[1:].isdigit() and len(names) <= 3:\n","\n","                values_counts = df[names].value_counts().reset_index()\n","                values_counts.columns = [names, 'count']\n","                fig = px.pie(values_counts, values='count', names=names,\n","                          color=names,\n","                          color_discrete_map=categorical_palette,\n","                          title=f\"R√©partition {names}\")\n","            else:\n","                fig = px.pie(df, names=names, color=color, color_discrete_map=palette)\n","        elif kind == 'violin':\n","            fig = px.violin(df, x=x, y=y, color=color, color_discrete_map=palette, box=True)\n","        elif kind == 'count':\n","\n","            fig = px.histogram(df, x=x, color=color, color_discrete_map=palette,\n","                            title=f\"Comptage de {x}\")\n","            fig.update_layout(yaxis_title=\"Nombre d'occurrences\")\n","\n","        fig.update_layout(\n","            title=title,\n","            height=500,\n","            margin=dict(l=20, r=20, t=40, b=20),\n","            template=\"simple_white\"\n","        )\n","\n","        return fig\n","    except Exception as e:\n","        st.error(f\"Erreur lors de la cr√©ation du graphique: {str(e)}\")\n","        return None\n","\n","\n","if 'df' not in st.session_state:\n","    st.session_state.df, st.session_state.df_ds1, st.session_state.df_ds2, st.session_state.df_ds3, st.session_state.df_ds4, st.session_state.df_ds5, st.session_state.df_stats = load_dataset()\n","\n","df = st.session_state.df\n","df_ds1 = st.session_state.df_ds1\n","df_ds2 = st.session_state.df_ds2\n","df_ds3 = st.session_state.df_ds3\n","df_ds4 = st.session_state.df_ds4\n","df_ds5 = st.session_state.df_ds5\n","df_stats = st.session_state.df_stats\n","\n","\n","if \"aq10_total\" not in st.session_state:\n","    st.session_state.aq10_total = 0\n","\n","# Titre de la sidebar am√©lior√©\n","st.sidebar.markdown('<p class=\"sidebar-title\">üß© Autisme - Navigation</p>', unsafe_allow_html=True)\n","\n","with st.sidebar:\n","\n","  # Navigation avec emojis\n","    pages = [\n","        \"üè† Accueil\",\n","        \"üîç Exploration des Donn√©es\",\n","        \"üß† Analyse ML\",\n","        \"üìù Test AQ-10\",\n","        \"ü§ñ Pr√©diction par IA\",\n","        \"üìö Documentation\",\n","        \"‚ÑπÔ∏è √Ä propos\"\n","    ]\n","    selection = st.sidebar.radio(\"Choisissez un outil :\", pages)\n","\n","# Palette de couleurs coh√©rente pour toutes les visualisations\n","palette = {\n","    \"Yes\": \"#3498db\",\n","    \"No\": \"#2ecc71\",\n","    \"Unknown\": \"#95a5a6\"\n","}\n","\n","if \"üè† Accueil\" in selection:\n","    current_page = \"Accueil\"\n","\n","    # En-t√™te principal avec l'image cliquable\n","    st.markdown(\"\"\"\n","    <div class=\"header-container\" style=\"margin-bottom: 30px;\">\n","        <span style=\"font-size: 3rem;\">üß©</span>\n","        <h1 class=\"app-title\">D√©pistage et Pr√©diction de l'Autisme</h1>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Image Ghibli - URL corrig√©e\n","    image_url = \"https://drive.google.com/file/d/1fY4J-WgufGTF6AgorFOspVKkHiRKEaiW/view?usp=drive_link\"\n","    st.markdown(get_img_with_href(image_url, \"#\", as_banner=True), unsafe_allow_html=True)\n","\n","\n","    st.markdown(\"\"\"\n","\n","    <div style=\"background: linear-gradient(90deg, #3498db, #2ecc71); border-radius: 10px; padding: 15px; margin: 20px 0;\">\n","        <h2 style=\"color: white; margin: 0; text-align: center;\">Notre plateforme de d√©pistage innovante</h2>\n","        <h3 style=\"font-size:1.2rem; font-weight:normal; color:white; margin-top:5px; font-style:italic; text-align: center;\">\n","            Combiner l'intelligence artificielle et les connaissances cliniques pour un meilleur d√©pistage des Troubles du Spectre Autistique.\n","        </h3>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # 3 cartes d'information avec colonnes Streamlit\n","    col1, col2, col3 = st.columns(3, gap=\"large\")\n","\n","    with col1:\n","        st.markdown(\"\"\"\n","        <div class=\"info-card fade-in\" style=\"height: 320px; display: flex; flex-direction: column; justify-content: space-between; border-radius: 15px; box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\">\n","            <div>\n","                <h3 class=\"card-title\">üìù Test AQ-10</h3>\n","                <p style=\"font-size: 1.05rem; margin-bottom: 15px;\">Questionnaire standardis√© reconnu internationalement pour le d√©pistage des troubles du spectre autistique.</p>\n","                <p style=\"color: #2c3e50; font-weight: 500;\">Simple, rapide et valid√© scientifiquement.</p>\n","            </div>\n","            <div style=\"margin-top: auto; text-align: center; padding-bottom: 15px;\">\n","                <a href=\"?selection=üìù Test AQ-10\" class=\"cta-button\" style=\"display: block; margin: 0 auto;\">Commencer le test</a>\n","            </div>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    with col2:\n","        st.markdown(\"\"\"\n","        <div class=\"info-card fade-in\" style=\"height: 320px; display: flex; flex-direction: column; justify-content: space-between; border-radius: 15px; box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\">\n","            <div>\n","                <h3 class=\"card-title\">ü§ñ Pr√©diction IA</h3>\n","                <p style=\"font-size: 1.05rem; margin-bottom: 15px;\">Notre mod√®le d'intelligence artificielle analyse vos r√©ponses et d'autres facteurs pour une √©valuation personnalis√©e.</p>\n","                <p style=\"color: #2c3e50; font-weight: 500;\">Pr√©cision √©lev√©e bas√©e sur des milliers de cas cliniques.</p>\n","            </div>\n","            <div style=\"margin-top: auto; text-align: center; padding-bottom: 15px;\">\n","                <a href=\"?selection=ü§ñ Pr√©diction par IA\" class=\"cta-button\" style=\"display: block; margin: 0 auto;\">D√©couvrir l'IA</a>\n","            </div>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    with col3:\n","        st.markdown(\"\"\"\n","        <div class=\"info-card fade-in\" style=\"height: 320px; display: flex; flex-direction: column; justify-content: space-between; border-radius: 15px; box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\">\n","            <div>\n","                <h3 class=\"card-title\">üîç Analyses</h3>\n","                <p style=\"font-size: 1.05rem; margin-bottom: 15px;\">Explorez nos donn√©es, visualisations et insights sur les Troubles du Spectre Autistique (TSA).</p>\n","                <p style=\"color: #2c3e50; font-weight: 500;\">Comprendre les corr√©lations et facteurs importants.</p>\n","            </div>\n","            <div style=\"margin-top: auto; text-align: center; padding-bottom: 15px;\">\n","                <a href=\"?selection=üîç Exploration des Donn√©es\" class=\"cta-button\" style=\"display: block; margin: 0 auto;\">Explorer les donn√©es</a>\n","            </div>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    # Section d'avertissement\n","    st.markdown(\"\"\"\n","    <div style=\"background-color: rgba(52, 152, 219, 0.1); border-left: 4px solid #3498db; padding: 15px; border-radius: 5px; margin: 30px 0;\">\n","        <strong style=\"color: #3498db; font-size: 1.1rem;\">Important :</strong>\n","        <p style=\"margin-top: 5px;\">Cet outil est con√ßu comme aide au d√©pistage et ne remplace en aucun cas une consultation m√©dicale professionnelle.\n","        Consultez toujours un sp√©cialiste pour une √©valuation compl√®te.</p>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Section Contexte du projet\n","    st.markdown(\"\"\"\n","    <h2 style=\"border-bottom: 2px solid #3498db; padding-bottom: 8px; margin-top: 40px;\">\n","        <span style=\"font-size: 1.5rem;\">üî¨</span> Contexte du projet\n","    </h2>\n","\n","    <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","    Ce projet s'inscrit dans le cadre de l'analyse des donn√©es li√©es au diagnostic des Troubles du Spectre de l'Autisme (TSA),\n","    repr√©sentant un ensemble de troubles neurod√©veloppementaux qui apparaissent g√©n√©ralement durant la petite enfance et persistent tout au long de la vie.\n","    Il ne s'agit pas d'une maladie mais d'une diff√©rence neurologique affectant le fonctionnement du cerveau.\n","    </p>\n","\n","    <h3 style=\"color: #3498db; margin-top: 25px;\">\n","        <span style=\"font-size: 1.2rem;\">üß†</span> Caract√©ristiques des TSA\n","    </h3>\n","\n","    <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","    Les manifestations des TSA sont extr√™mement variables d'une personne √† l'autre, cr√©ant un v√©ritable \"spectre\" de pr√©sentations cliniques.\n","    Chaque personne autiste pr√©sente une combinaison unique de forces et de difficult√©s. Les particularit√©s sensorielles\n","    (hypersensibilit√© ou hyposensibilit√© aux stimuli) font d√©sormais partie int√©grante des crit√®res diagnostiques.\n","    </p>\n","\n","    <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","    La reconnaissance des TSA s'est am√©lior√©e ces derni√®res ann√©es mais le diagnostic peut parfois √™tre pos√© tardivement,\n","    notamment chez les personnes sans d√©ficience intellectuelle ou chez celles qui ont d√©velopp√© des strat√©gies de compensation.\n","    Un accompagnement adapt√©, tenant compte des sp√©cificit√©s de chaque personne est essentiel pour favoriser l'inclusion sociale et\n","    l'√©panouissement de la personne.\n","    </p>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Section \"√Ä qui s'adresse ce projet?\"\n","    st.markdown(\"\"\"\n","    ### √Ä qui s'adresse ce projet?\n","    \"\"\")\n","\n","    # Section Contexte Clinique des TSA - Titre et introduction\n","    st.markdown(\"\"\"\n","    <h2 style=\"border-bottom: 2px solid #3498db; padding-bottom: 8px; margin-top: 40px;\">\n","        <span style=\"font-size: 1.5rem;\">üè•</span> Contexte Clinique des TSA\n","    </h2>\n","\n","    <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","    Selon les classifications r√©centes comme le DSM-5, les TSA sont d√©sormais d√©finis selon une dyade autistique,\n","    rempla√ßant l'ancienne triade. Cette dyade comprend deux cat√©gories de crit√®res diagnostiques:\n","    </p>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Section des deux cat√©gories - Utilisation de colonnes Streamlit au lieu de div avec grid\n","    col1, col2 = st.columns(2)\n","\n","    with col1:\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 3px 10px rgba(0,0,0,0.08);\">\n","            <h4 style=\"color: #3498db; margin-top: 0;\"><span style=\"font-size: 1.2rem;\">üó£Ô∏è</span> D√©ficits de communication</h4>\n","            <p>D√©ficits persistants de la communication et des interactions sociales observ√©s dans des contextes vari√©s (difficult√©s dans la r√©ciprocit√© √©motionnelle, les comportements non verbaux et le d√©veloppement des relations)</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    with col2:\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 3px 10px rgba(0,0,0,0.08);\">\n","            <h4 style=\"color: #3498db; margin-top: 0;\"><span style=\"font-size: 1.2rem;\">üîÑ</span> Comportements restreints et r√©p√©titifs</h4>\n","            <p>Caract√®re restreint et r√©p√©titif des comportements, des int√©r√™ts ou des activit√©s (mouvements st√©r√©otyp√©s, attachement aux routines, int√©r√™ts restreints et particularit√©s sensorielles)</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    # Texte entre les deux sections\n","    st.markdown(\"\"\"\n","    <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","    Les classifications actuelles ont abandonn√© les sous-types d'autisme (comme le syndrome d'Asperger ou l'autisme de Kanner)\n","    au profit d'un diagnostic unique de TSA avec trois niveaux de s√©v√©rit√© refl√©tant le degr√© de soutien n√©cessaire:\n","    </p>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Section des trois niveaux - Utilisation de colonnes Streamlit\n","    col1, col2, col3 = st.columns(3)\n","\n","    with col1:\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #e8f5e9; padding: 15px; border-radius: 10px; border-left: 4px solid #2ecc71;\">\n","            <h4 style=\"color: #2ecc71; margin-top: 0;\">Niveau 1</h4>\n","            <p>N√©cessite un soutien</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    with col2:\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #eaf2f8; padding: 15px; border-radius: 10px; border-left: 4px solid #3498db;\">\n","            <h4 style=\"color: #3498db; margin-top: 0;\">Niveau 2</h4>\n","            <p>N√©cessite un soutien important</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    with col3:\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #f5eef8; padding: 15px; border-radius: 10px; border-left: 4px solid #9b59b6;\">\n","            <h4 style=\"color: #9b59b6; margin-top: 0;\">Niveau 3</h4>\n","            <p>N√©cessite un soutien tr√®s important</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","\n","    # Section pr√©valence\n","    st.markdown(\"\"\"\n","    <div style=\"background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 3px 10px rgba(0,0,0,0.08); margin-top: 20px;\">\n","        <h4 style=\"color: #3498db; margin-top: 0;\"><span style=\"font-size: 1.2rem;\">üìä</span> Pr√©valence</h4>\n","        <p style=\"font-size: 1.05rem; line-height: 1.6;\">\n","        La pr√©valence des TSA est estim√©e √† environ 1% de la population mondiale, avec des √©tudes r√©centes sugg√©rant une fourchette\n","        entre 1% et 2% dans les pays √† revenu √©lev√©. En France, environ 700 000 personnes sont concern√©es. On observe une proportion\n","        plus importante chez les gar√ßons, avec un ratio d'environ 4:1.\n","        </p>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","\n","\n","\n","elif \"üîç Exploration des Donn√©es\" in selection:\n","    # Initialisation des √©tats d'expanders\n","    if 'expanders_initialized' not in st.session_state:\n","        st.session_state.expanders_initialized = {\n","            'structure': True,\n","            'valeurs_manquantes': True,\n","            'pipeline': True,\n","            'variables_cles': True,\n","            'questionnaire': True,\n","            'composite': True,\n","            'statistiques': True,\n","            'correlation': True,\n","            'famd': True\n","        }\n","\n","    # En-t√™te modernis√©\n","    st.markdown(\"\"\"\n","    <div class=\"header-container\">\n","        <span style=\"font-size:2.5rem\">üîç</span>\n","        <h1 class=\"app-title\">Exploration des Donn√©es TSA</h1>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # 1. Structure des donn√©es\n","    with st.expander(\"üìÇ Structure des Donn√©es\", expanded=st.session_state.expanders_initialized['structure']):\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #f0f7ff; padding: 15px; border-radius: 8px; margin-top: 15px; border-left: 4px solid #3498db;\">\n","            <h4 style=\"color: #2c3e50; margin-top: 0;\">Description des jeux de donn√©es utilis√©s</h4>\n","            <ul style=\"margin-top: 10px;\">\n","                <li><strong>Dataset Final :</strong> 5049 sujets consolid√©s</li>\n","                <li><strong>Variables :</strong> 21 variables dont 10 questions AQ-10</li>\n","                <li><strong>P√©riode :</strong> Donn√©es collect√©es entre 2018 et 2023</li>\n","            </ul>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","        tab_main, tab1, tab2, tab3, tab4, tab5 = st.tabs([\n","            \"Dataset Final\", \"Dataset 1\", \"Dataset 2\", \"Dataset 3\", \"Dataset 4\", \"Dataset 5\"\n","        ])\n","        with tab_main:\n","            st.caption(\"Dataset Final\")\n","            st.dataframe(df.head(5), use_container_width=True)\n","        with tab1:\n","            st.caption(\"Dataset 1\")\n","            st.dataframe(df_ds1.head(5), use_container_width=True)\n","        with tab2:\n","            st.caption(\"Dataset 2\")\n","            st.dataframe(df_ds2.head(5), use_container_width=True)\n","        with tab3:\n","            st.caption(\"Dataset 3\")\n","            st.dataframe(df_ds3.head(5), use_container_width=True)\n","        with tab4:\n","            st.caption(\"Dataset 4\")\n","            st.dataframe(df_ds4.head(5), use_container_width=True)\n","        with tab5:\n","            st.caption(\"Dataset 5\")\n","            st.dataframe(df_ds5.head(5), use_container_width=True)\n","\n","    # 2. Analyse des valeurs manquantes\n","    with st.expander(\"üìâ Analyse des Valeurs Manquantes\", expanded=st.session_state.expanders_initialized['valeurs_manquantes']):\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\n","            <h3 style=\"color: #2c3e50; margin-top: 0;\">Analyse des Valeurs Manquantes</h3>\n","            <p style=\"color: #7f8c8d;\">Visualisation et quantification des donn√©es manquantes dans le jeu de donn√©es.</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","        missing_percent = (df.isnull().sum() / len(df)) * 100\n","        missing_info = pd.DataFrame({\n","            'Colonne': missing_percent.index,\n","            'Pourcentage': missing_percent.values\n","        })\n","        missing_info = missing_info[missing_info['Pourcentage'] > 0].sort_values('Pourcentage', ascending=False)\n","        if not missing_info.empty:\n","            col1, col2 = st.columns([3, 2])\n","            with col1:\n","                fig = px.bar(\n","                    missing_info,\n","                    x='Pourcentage',\n","                    y='Colonne',\n","                    orientation='h',\n","                    title=\"Pourcentage de valeurs manquantes par colonne\",\n","                    color='Pourcentage',\n","                    color_continuous_scale=px.colors.sequential.Blues,\n","                    text='Pourcentage'\n","                )\n","                fig.update_traces(texttemplate='%{text:.2f}%', textposition='outside')\n","                fig.update_layout(\n","                    height=400,\n","                    xaxis_title=\"Pourcentage (%)\",\n","                    yaxis_title=\"\",\n","                    coloraxis_showscale=False,\n","                    margin=dict(l=20, r=20, t=40, b=20),\n","                )\n","                st.plotly_chart(fig, use_container_width=True)\n","            with col2:\n","                st.metric(\n","                    \"Nombre de colonnes avec valeurs manquantes\",\n","                    missing_info.shape[0],\n","                    delta=f\"{missing_info.shape[0]/df.shape[1]:.1%} des colonnes\"\n","                )\n","                st.markdown(\"### D√©tail des valeurs manquantes\")\n","                st.dataframe(missing_info, use_container_width=True)\n","                total_missing = (df.isnull().sum().sum() / (df.shape[0] * df.shape[1])) * 100\n","                st.info(f\"Taux global de donn√©es manquantes : {total_missing:.2f}%\")\n","        else:\n","            st.success(\"‚úÖ Aucune valeur manquante d√©tect√©e dans le jeu de donn√©es.\")\n","\n","    # 3. Pipeline de nettoyage\n","    with st.expander(\"üßº Pipeline de Nettoyage\", expanded=st.session_state.expanders_initialized['pipeline']):\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\n","            <h3 style=\"color: #2c3e50; margin-top: 0;\">√âtapes de Transformation des Donn√©es</h3>\n","            <p style=\"color: #7f8c8d;\">Processus automatis√© pour pr√©parer les donn√©es √† l'analyse.</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","        col1, col2 = st.columns([1, 3])\n","        with col1:\n","            st.markdown(\"\"\"\n","            <div style=\"background-color: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n","                <h4 style=\"color: #3498db; margin-top: 0;\">√âtapes de Transformation</h4>\n","                <ol style=\"padding-left: 20px; color: #2c3e50;\">\n","                    <li><b>Uniformisation</b> des colonnes</li>\n","                    <li><b>Typage</b> des variables</li>\n","                    <li><b>Gestion</b> des valeurs manquantes</li>\n","                    <li><b>Encodage</b> cat√©goriel</li>\n","                    <li><b>Normalisation</b> des √©chelles</li>\n","                </ol>\n","            </div>\n","            \"\"\", unsafe_allow_html=True)\n","        with col2:\n","            avant_tab, apres_tab = st.tabs([\"Avant Nettoyage\", \"Apr√®s Nettoyage\"])\n","            with avant_tab:\n","                raw_data_sample = pd.DataFrame({\n","                    'A10_Score': [7, 5, None, 3],\n","                    'Age_Years': [29, None, 'unknown', 383],\n","                    'asd_traits': ['yes', 'no', 'no', 'yes']\n","                })\n","                st.dataframe(raw_data_sample.style.highlight_null(color='#ffcdd2'), use_container_width=True)\n","            with apres_tab:\n","                clean_data_sample = pd.DataFrame({\n","                    'A10': [7, 5, 4, 3],\n","                    'Age': [29, 35, 42, 38],\n","                    'TSA': ['Yes', 'No', 'No', 'Yes'],\n","                    'Statut_testeur': ['Famille', 'Famille', 'Famille', 'Famille']\n","                })\n","                st.dataframe(clean_data_sample, use_container_width=True)\n","                metrics_col1, metrics_col2 = st.columns(2)\n","                with metrics_col1:\n","                    st.metric(\"R√©duction des valeurs manquantes\", \"92%\", \"10% ‚Üí 0.8%\")\n","                with metrics_col2:\n","                    st.metric(\"Anomalies corrig√©es\", \"100%\", \"14 anomalies d√©tect√©es\")\n","\n","    # 4. Distribution des variables cl√©s\n","    with st.expander(\"üìä Distribution des Variables Cl√©s\", expanded=st.session_state.expanders_initialized['variables_cles']):\n","        st.markdown(\"\"\"\n","        <div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\n","            <h3 style=\"color: #2c3e50; margin-top: 0;\">Distribution des Variables Cl√©s</h3>\n","            <p style=\"color: #7f8c8d;\">Analyse interactive des distributions par variable et diagnostic TSA.</p>\n","        </div>\n","        \"\"\", unsafe_allow_html=True)\n","        all_columns = [col for col in df.columns if col != 'TSA']\n","        analysis_var = st.selectbox(\"Choisir une variable √† analyser\", all_columns, key=\"analysis_var_in_exploration\")\n","        col1, col2 = st.columns(2)\n","        with col1:\n","            color_var = 'TSA' if 'TSA' in df.columns else None\n","            # Correction sp√©cifique pour la variable Jaunisse (cat√©gorielle)\n","            if analysis_var == 'Jaunisse':\n","                fig = px.histogram(df, x='Jaunisse', color='TSA',\n","                                   color_discrete_map=palette,\n","                                   barnorm='percent',\n","                                   title=\"Pr√©valence de la jaunisse par statut TSA\")\n","                st.plotly_chart(fig, use_container_width=True)\n","            else:\n","                is_categorical_aq = analysis_var.startswith('A') and analysis_var[1:].isdigit() and len(analysis_var) <= 3\n","                if is_categorical_aq:\n","                    fig = create_plotly_figure(df, x=analysis_var, color=color_var, kind='bar', title=f\"Distribution de {analysis_var} (cat√©gorielle)\")\n","                else:\n","                    fig = create_plotly_figure(df, x=analysis_var, color=color_var, kind='histogram', title=f\"Distribution de {analysis_var}\")\n","                if fig:\n","                    st.plotly_chart(fig, use_container_width=True)\n","        with col2:\n","            if 'TSA' in df.columns:\n","                stats = df.groupby('TSA')[analysis_var].describe()\n","            else:\n","                stats = df[analysis_var].describe().to_frame().T\n","            st.dataframe(stats, use_container_width=True)\n","\n","    # 5. Analyse des r√©ponses au questionnaire A10\n","    with st.expander(\"üìù Analyse des R√©ponses au Questionnaire AQ-10\", expanded=st.session_state.expanders_initialized['questionnaire']):\n","        st.subheader(\"Analyse des R√©ponses au Questionnaire AQ-10\")\n","        question_tabs = st.tabs([f\"Q{i+1}\" for i in range(10)])\n","        for i, tab in enumerate(question_tabs):\n","            with tab:\n","                col1, col2 = st.columns([2,3])\n","                with col1:\n","                    st.write(f\"**Question A{i+1} :**\")\n","                    st.markdown(\"> \" + get_question_text(i+1))\n","                with col2:\n","                    try:\n","                        values_counts = df[f'A{i+1}'].value_counts().reset_index()\n","                        values_counts.columns = [f'A{i+1}', 'count']\n","                        color_discrete_map = {0: \"#2ecc71\", 1: \"#3498db\"}\n","                        fig = px.pie(\n","                            values_counts,\n","                            values='count',\n","                            names=f'A{i+1}',\n","                            color=f'A{i+1}',\n","                            color_discrete_map=color_discrete_map,\n","                            title=f\"R√©partition des r√©ponses A{i+1}\"\n","                        )\n","                        st.plotly_chart(fig, use_container_width=True)\n","                    except Exception as e:\n","                        st.error(f\"Erreur lors de la cr√©ation du graphique: {str(e)}\")\n","\n","    # 6. Cr√©ation de variable composite\n","    with st.expander(\"‚öôÔ∏è Cr√©ation de Variables Composites\", expanded=st.session_state.expanders_initialized['composite']):\n","        st.subheader(\"Cr√©ation de Variables Composites\")\n","        col1, col2 = st.columns(2)\n","        with col1:\n","            st.write(\"**Score A10 :**\")\n","            st.markdown(\"\"\"\n","            $$\n","            \\\\text{Score\\\\_A10} = \\\\sum_{i=1}^{10} A_i\n","            $$\n","            \"\"\")\n","            if 'TSA' in df.columns:\n","                yes_mean = df[df['TSA'] == 'Yes']['Score_A10'].mean()\n","                no_mean = df[df['TSA'] == 'No']['Score_A10'].mean()\n","                st.metric(\"Score Moyen (TSA)\", f\"{yes_mean:.1f} ¬± {df[df['TSA'] == 'Yes']['Score_A10'].std():.1f}\")\n","                st.metric(\"Score Moyen (Non-TSA)\", f\"{no_mean:.1f} ¬± {df[df['TSA'] == 'No']['Score_A10'].std():.1f}\")\n","            else:\n","                overall_mean = df['Score_A10'].mean()\n","                st.metric(\"Score Moyen\", f\"{overall_mean:.1f} ¬± {df['Score_A10'].std():.1f}\")\n","        with col2:\n","            color_var = 'TSA' if 'TSA' in df.columns else None\n","            fig = create_plotly_figure(df, y='Score_A10', color=color_var, kind='violin', title=\"Distribution des Scores\")\n","            if fig:\n","                st.plotly_chart(fig, use_container_width=True)\n","\n","    # 7. Statistiques du dataset final\n","    with st.expander(\"üìà Statistiques du Dataset Final\", expanded=st.session_state.expanders_initialized['statistiques']):\n","        st.subheader(\"Statistiques Descriptives\")\n","        tab1, tab2 = st.tabs([\"Num√©riques\", \"Cat√©gorielles\"])\n","        with tab1:\n","            st.write(df.describe())\n","        with tab2:\n","            categorical_stats = df.select_dtypes(include=['object']).describe().T\n","            st.dataframe(categorical_stats)\n","\n","    # 8. Matrice de corr√©lation\n","    with st.expander(\"üîó Matrice de Corr√©lation\", expanded=st.session_state.expanders_initialized['correlation']):\n","        try:\n","            df_corr = df.copy()\n","            if 'Jaunisse' in df_corr.columns:\n","                df_corr = df_corr.drop(columns=['Jaunisse'])\n","            if 'TSA' in df_corr.columns:\n","                df_corr['TSA_num'] = df_corr['TSA'].map({'Yes': 1, 'No': 0})\n","            categorical_cols = df_corr.select_dtypes(include=['object']).columns\n","            if not categorical_cols.empty:\n","                ohe = OneHotEncoder(sparse_output=False, drop='first')\n","                encoded_data = ohe.fit_transform(df_corr[categorical_cols])\n","                feature_names = ohe.get_feature_names_out(categorical_cols)\n","                encoded_df = pd.DataFrame(encoded_data, columns=feature_names)\n","                numeric_df = df_corr.select_dtypes(exclude=['object']).reset_index(drop=True)\n","                df_corr_processed = pd.concat([numeric_df, encoded_df], axis=1)\n","            else:\n","                df_corr_processed = df_corr.select_dtypes(exclude=['object'])\n","            corr_matrix = df_corr_processed.corr(numeric_only=True)\n","            mask = np.triu(np.ones_like(corr_matrix, dtype=bool))\n","            fig, ax = plt.subplots(figsize=(14, 12))\n","            cmap = sns.diverging_palette(200, 120, as_cmap=True)\n","            sns.heatmap(\n","                corr_matrix,\n","                mask=mask,\n","                cmap=cmap,\n","                vmax=1.0,\n","                vmin=-1.0,\n","                center=0,\n","                square=True,\n","                linewidths=0.8,\n","                fmt='.2f',\n","                annot=True,\n","                annot_kws={\"size\": 9, \"weight\": \"bold\"},\n","                cbar_kws={\"shrink\": 0.8, \"label\": \"Coefficient de corr√©lation\"}\n","            )\n","            plt.title(\"Matrice de corr√©lation des variables\", fontsize=16, pad=20)\n","            plt.xticks(rotation=45, ha='right', fontsize=9)\n","            plt.yticks(fontsize=9)\n","            plt.tight_layout()\n","            st.pyplot(fig)\n","        except Exception as e:\n","            st.error(f\"Erreur lors du calcul de la matrice de corr√©lation: {str(e)}\")\n","\n","    # 9. Tests statistiques (menu d√©roulant s√©par√©)\n","    with st.expander(\"üß™ Tests Statistiques\", expanded=False):\n","        test_type = st.radio(\n","            \"Choisir le type de test:\",\n","            [\"Chi-carr√© (variables cat√©gorielles)\", \"Mann-Whitney (variables num√©riques)\"],\n","            key=\"stat_test_type\"\n","        )\n","        if test_type == \"Chi-carr√© (variables cat√©gorielles)\":\n","                st.markdown(\"\"\"\n","                <div style=\"background-color: #f0f7ff; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\n","                    <h4 style=\"color: #3498db; margin-top: 0;\">Test d'ind√©pendance du Chi-carr√©</h4>\n","                    <p>Ce test √©value si deux variables cat√©gorielles sont ind√©pendantes. Un p-value < 0.05 sugg√®re une relation significative entre les variables.</p>\n","                </div>\n","                \"\"\", unsafe_allow_html=True)\n","\n","                # D√©finir categorical_cols\n","                df = df.copy()\n","                categorical_cols = df.select_dtypes(include=['object']).columns.tolist()\n","\n","                # Ajouter les variables A1-A10 aux variables cat√©gorielles\n","                aq_columns = [col for col in df.columns if col.startswith('A') and col[1:].isdigit()]\n","                categorical_cols.extend([col for col in aq_columns if col not in categorical_cols])\n","\n","                if 'TSA' in categorical_cols:\n","                    categorical_cols.remove('TSA')\n","\n","                # S√©lection de la variable cat√©gorielle √† tester\n","                if categorical_cols:\n","                    cat_var = st.selectbox(\n","                        \"S√©lectionner une variable cat√©gorielle:\",\n","                        categorical_cols,\n","                        key=\"chi2_var_selector\"\n","                    )\n","\n","                    # R√©alisation du test\n","                    try:\n","                        # Cr√©ation d'une table de contingence\n","                        contingency_table = pd.crosstab(df[cat_var], df['TSA'])\n","\n","                        # Calcul du chi2\n","                        chi2_stat, p_val, dof, expected = chi2_contingency(contingency_table)\n","\n","                        # Affichage des r√©sultats\n","                        col1, col2 = st.columns(2)\n","                        with col1:\n","                            st.markdown(\"### Table de contingence\")\n","                            st.dataframe(contingency_table.style.set_properties(**{'background-color': 'white'}), use_container_width=True)\n","                            # Afficher les fr√©quences relatives (%)\n","                            st.markdown(\"### Fr√©quences relatives (%)\")\n","                            contingency_percent = contingency_table.div(contingency_table.sum(axis=1), axis=0) * 100\n","                            st.dataframe(\n","                                contingency_percent.style.format(\"{:.1f}%\"),\n","                                use_container_width=True\n","                            )\n","\n","                        with col2:\n","                            st.markdown(\"### R√©sultats du test\")\n","                            st.metric(\"Statistique œá¬≤\", f\"{chi2_stat:.3f}\")\n","                            st.metric(\"p-value\", f\"{p_val:.5f}\")\n","                            st.metric(\"Degr√©s de libert√©\", dof)\n","\n","                            # Interpr√©tation\n","                            if p_val < 0.05:\n","                                st.success(f\"**Significatif** (p < 0.05) : Il existe une relation significative entre '{cat_var}' et le diagnostic TSA.\")\n","                            else:\n","                                st.info(f\"**Non significatif** (p > 0.05) : Pas de relation significative d√©tect√©e entre '{cat_var}' et le diagnostic TSA.\")\n","\n","                        # Visualisation\n","                        st.markdown(\"### Visualisation de la relation\")\n","                        fig = px.bar(\n","                            contingency_percent.reset_index().melt(id_vars=cat_var),\n","                            x=cat_var, y='value', color='TSA',\n","                            barmode='group',\n","                            color_discrete_map=palette,\n","                            labels={'value': 'Pourcentage (%)'},\n","                            title=f\"Distribution de '{cat_var}' par diagnostic TSA\"\n","                        )\n","                        st.plotly_chart(fig, use_container_width=True)\n","\n","                    except Exception as e:\n","                        st.error(f\"Erreur lors du test Chi-carr√©: {str(e)}\")\n","                        st.info(\"Assurez-vous que la variable s√©lectionn√©e contient suffisamment de donn√©es non-nulles.\")\n","                else:\n","                    st.warning(\"Aucune variable cat√©gorielle trouv√©e dans le dataset (en excluant TSA).\")\n","\n","        else:  # Mann-Whitney\n","            st.markdown(\"\"\"\n","                <div style=\"background-color: #f0f7ff; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\n","                    <h4 style=\"color: #3498db; margin-top: 0;\">Test de Mann-Whitney U</h4>\n","                    <p>Ce test non-param√©trique compare les distributions de deux groupes ind√©pendants. Un p-value < 0.05 sugg√®re une diff√©rence significative entre les groupes.</p>\n","                </div>\n","                \"\"\", unsafe_allow_html=True)\n","\n","\n","            numeric_cols = df.select_dtypes(include=['float', 'int']).columns.tolist()\n","                # Retirer A1-A10 de l'analyse Mann-Whitney\n","            numeric_cols = [col for col in numeric_cols if not (col.startswith('A') and col[1:].isdigit() and len(col) <= 3)]\n","\n","            if 'Score_A10' in numeric_cols:\n","                    # Mettre Score_A10 en t√™te de liste car souvent analys√©\n","                numeric_cols.remove('Score_A10')\n","                numeric_cols = ['Score_A10'] + numeric_cols\n","\n","            if numeric_cols:\n","                num_var = st.selectbox(\n","                    \"S√©lectionner une variable num√©rique:\",\n","                    numeric_cols,\n","                    key=\"mw_var_selector\"\n","                    )\n","\n","\n","                    # R√©alisation du test\n","                try:\n","                    if 'TSA' in df.columns and df['TSA'].nunique() >= 2:\n","                            # Pr√©paration des groupes\n","                        yes_group = df[df['TSA'] == 'Yes'][num_var].dropna()\n","                        no_group = df[df['TSA'] == 'No'][num_var].dropna()\n","\n","                        if len(yes_group) > 0 and len(no_group) > 0:\n","                                # R√©alisation du test Mann-Whitney\n","                            stat, p_val = mannwhitneyu(yes_group, no_group, alternative='two-sided')\n","\n","                                # Affichage des r√©sultats\n","                            col1, col2 = st.columns(2)\n","                            with col1:\n","                                st.markdown(\"### Statistiques descriptives\")\n","                                group_stats = df.groupby('TSA')[num_var].agg(['count', 'mean', 'std', 'min', 'median', 'max'])\n","                                st.dataframe(\n","                                    group_stats.style.format(\"{:.2f}\", subset=['mean', 'std', 'min', 'median', 'max']),\n","                                    use_container_width=True\n","                                    )\n","\n","                                    # Diff√©rence des moyennes\n","                                mean_diff = yes_group.mean() - no_group.mean()\n","                                st.metric(\n","                                        \"Diff√©rence des moyennes (TSA - Non TSA)\",\n","                                    f\"{mean_diff:.2f}\",\n","                                    delta=f\"{(mean_diff / no_group.mean()) * 100:.1f}%\"\n","                                    )\n","\n","                            with col2:\n","                                st.markdown(\"### R√©sultats du test\")\n","                                st.metric(\"Statistique U\", f\"{stat:.1f}\")\n","                                st.metric(\"p-value\", f\"{p_val:.5f}\")\n","                                    # Taille de l'√©chantillon\n","                                st.metric(\"Taille √©chantillon (TSA / Non TSA)\", f\"{len(yes_group)} / {len(no_group)}\")\n","\n","                                    # Interpr√©tation\n","                                if p_val < 0.05:\n","                                    st.success(f\"**Significatif** (p < 0.05) : Il existe une diff√©rence significative de '{num_var}' entre les groupes TSA et non-TSA.\")\n","                                else:\n","                                    st.info(f\"**Non significatif** (p > 0.05) : Pas de diff√©rence significative de '{num_var}' d√©tect√©e entre les groupes TSA et non-TSA.\")\n","\n","                                # Visualisation\n","                            st.markdown(\"### Visualisation de la comparaison\")\n","                            fig = px.box(\n","                                df.dropna(subset=[num_var]), x='TSA', y=num_var,\n","                                color='TSA', color_discrete_map=palette,\n","                                points='all', notched=True,\n","                                title=f\"Comparaison de '{num_var}' entre les groupes TSA et non-TSA\"\n","                                )\n","                            fig.add_annotation(\n","                                x=0.5, y=df[num_var].max() * 0.95,\n","                                text=f\"p-value = {p_val:.5f}\" + (\" (significatif)\" if p_val < 0.05 else \"\"),\n","                                showarrow=False,\n","                                font=dict(size=14, color='red' if p_val < 0.05 else 'gray')\n","                                )\n","                            st.plotly_chart(fig, use_container_width=True)\n","                        else:\n","                            st.warning(f\"Impossible de r√©aliser le test: donn√©es insuffisantes pour '{num_var}' dans un ou les deux groupes.\")\n","                    else:\n","                        st.warning(\"Pour effectuer ce test, le dataset doit contenir une colonne 'TSA' avec au moins deux groupes distincts.\")\n","                except Exception as e:\n","                    st.error(f\"Erreur lors du test de Mann-Whitney: {str(e)}\")\n","                    st.info(\"Assurez-vous que la variable s√©lectionn√©e contient suffisamment de donn√©es num√©riques non-nulles.\")\n","            else:\n","                st.warning(\"Aucune variable num√©rique trouv√©e dans le dataset.\")\n","\n","    # 10. FAMD\n","    with st.expander(\"üìê Analyse Factorielle (FAMD)\", expanded=st.session_state.expanders_initialized['famd']):\n","        st.header(\"Analyse Factorielle Mixte (FAMD)\")\n","        try:\n","            df_famd = df.copy()\n","            n_components = 5\n","            X_famd = df_famd.copy()\n","            famd = prince.FAMD(n_components=n_components, n_iter=10, random_state=42)\n","            famd = famd.fit(X_famd)\n","            eigenvalues = famd.eigenvalues_\n","            explained_variance = eigenvalues / sum(eigenvalues)\n","            st.subheader(\"Projection des individus\")\n","            if hasattr(famd, 'row_coordinates'):\n","                coordinates = famd.row_coordinates(X_famd)\n","                fig, ax = plt.subplots(figsize=(10, 8))\n","                if 'TSA' in df_famd.columns:\n","                    for category in df_famd['TSA'].unique():\n","                        mask = df_famd['TSA'] == category\n","                        subset_indices = df_famd[mask].index\n","                        ax.scatter(\n","                            coordinates.iloc[subset_indices, 0],\n","                            coordinates.iloc[subset_indices, 1],\n","                            label=category,\n","                            alpha=0.7\n","                        )\n","                    ax.legend()\n","                else:\n","                    ax.scatter(coordinates.iloc[:, 0], coordinates.iloc[:, 1], alpha=0.7)\n","                ax.set_xlabel('Composante 1')\n","                ax.set_ylabel('Composante 2')\n","                ax.set_title('Projection des individus sur les deux premi√®res composantes')\n","                ax.grid(True, linestyle='--', alpha=0.7)\n","                st.pyplot(fig)\n","            st.subheader(\"Importance des composantes\")\n","            inertia_df = pd.DataFrame({\n","                'Composante': [f'Composante {i+1}' for i in range(len(explained_variance))],\n","                'Inertie expliqu√©e': explained_variance,\n","                'Inertie cumul√©e': np.cumsum(explained_variance)\n","            })\n","            st.table(inertia_df.head(5))\n","            st.markdown(\"\"\"\n","                ## Interpr√©tation des composantes principales\n","                L'Analyse Factorielle de Donn√©es Mixtes (FAMD) fonctionne comme une **ACP pour les variables quantitatives** et comme une **ACM pour les variables qualitatives**. Cette m√©thode permet d'analyser simultan√©ment des variables des deux types tout en √©quilibrant leur influence.\n","                - Les premi√®res composantes r√©v√®lent les **dimensions les plus structurantes** dans les donn√©es\n","                - Les projections permettent de visualiser comment les individus se regroupent selon ces dimensions\n","            \"\"\")\n","        except Exception as e:\n","            st.error(f\"Erreur lors de l'analyse FAMD: {str(e)}\")\n","\n","\n","elif \"üß† Analyse ML\" in selection:\n","    current_page = \"Analyse ML\"\n","    # En-t√™te modernis√©\n","    st.markdown(\"\"\"\n","    <div class=\"header-container\">\n","        <span style=\"font-size:2.5rem\">üß†</span>\n","        <h1 class=\"app-title\">Analyse par Machine Learning</h1>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    # Mod√©lisation directe sans utiliser FAMD pour transformation\n","    st.header(\"Mod√©lisation par Random Forest\")\n","    with st.spinner(\"üå≥ Entra√Ænement du mod√®le...\"):\n","        try:\n","            if 'TSA' not in df.columns:\n","                st.error(\"La colonne 'TSA' n'est pas pr√©sente dans le DataFrame.\")\n","                st.info(\"Assurez-vous que votre jeu de donn√©es contient bien une colonne 'TSA'.\")\n","            else:\n","                # Pr√©parer les donn√©es sans utiliser FAMD\n","                # S√©parer les variables num√©riques et cat√©gorielles\n","                categorical_cols = df.select_dtypes(include=['object']).columns.tolist()\n","                if 'TSA' in categorical_cols:\n","                    categorical_cols.remove('TSA')\n","                numerical_cols = df.select_dtypes(exclude=['object']).columns.tolist()\n","\n","                # Explication des pipelines de pr√©traitement\n","                st.subheader(\"Explication d√©taill√©e du pipeline de pr√©traitement\")\n","                st.markdown(\"\"\"\n","                ### Pipeline de pr√©processing pour les donn√©es mixtes\n","\n","                Notre pipeline de pr√©traitement g√®re √† la fois les variables num√©riques et cat√©gorielles de mani√®re appropri√©e:\n","\n","                #### 1. Standardisation des variables num√©riques\n","                ```\n","                ('num', StandardScaler(), numerical_cols)\n","                ```\n","                - Applique une standardisation (moyenne=0, √©cart-type=1) aux variables num√©riques\n","                - Essentiel pour les algorithmes sensibles √† l'√©chelle comme les SVM ou les r√©gressions r√©gularis√©es\n","                - Permet de comparer l'importance des variables malgr√© leurs √©chelles d'origine diff√©rentes\n","\n","                #### 2. Encodage des variables cat√©gorielles\n","                ```\n","                ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_cols)\n","                ```\n","                - Transforme les variables cat√©gorielles en variables binaires (one-hot encoding)\n","                - Param√®tre `handle_unknown='ignore'` g√®re les cat√©gories inconnues (non pr√©sentes lors de l'entra√Ænement)\n","                - Cr√©e une colonne distincte pour chaque modalit√©, sauf une pour √©viter la multicolin√©arit√©\n","\n","                #### 3. Conservation des colonnes non sp√©cifi√©es\n","                ```\n","                remainder='passthrough'\n","                ```\n","                - Conserve les colonnes qui ne sont ni num√©riques ni cat√©gorielles\n","                - Assure qu'aucune information n'est perdue lors du pr√©traitement\n","\n","                #### Avantages de cette approche\n","                - **Reproductibilit√©**: Le m√™me pr√©traitement est appliqu√© √† l'entra√Ænement et √† la pr√©diction\n","                - **√âvitement des fuites de donn√©es**: Les param√®tres de scaling sont calcul√©s uniquement sur l'ensemble d'entra√Ænement\n","                - **Flexibilit√©**: Facilement adaptable √† diff√©rents types de donn√©es et d'algorithmes\n","                \"\"\")\n","\n","                # Pr√©processeur pour les donn√©es mixtes avec remainder='passthrough'\n","                # pour conserver toutes les colonnes, y compris Statut_testeur\n","                preprocessor = ColumnTransformer(\n","                    transformers=[\n","                        ('num', StandardScaler(), numerical_cols),\n","                        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_cols)\n","                    ],\n","                    remainder='passthrough',  # Conserver les colonnes non sp√©cifi√©es\n","                    verbose_feature_names_out=False\n","                )\n","\n","                X = df.drop(columns=['TSA'])\n","                y = df['TSA'].map({'Yes': 1, 'No': 0})\n","\n","                # Pipeline avec pr√©processeur et Random Forest optimis√© pour Google Colab\n","                pipeline = Pipeline([\n","                    ('preprocessor', preprocessor),\n","                    ('classifier', RandomForestClassifier(\n","                        n_estimators=50,  # R√©duit de 100 √† 50 pour acc√©l√©rer\n","                        max_depth=8,\n","                        min_samples_split=10,\n","                        min_samples_leaf=2,\n","                        max_features='sqrt',  # Pour acc√©l√©rer\n","                        random_state=42,\n","                        n_jobs=-1  # Utiliser tous les c≈ìurs disponibles\n","                    ))\n","                ])\n","\n","                # Division train/test et entra√Ænement\n","                X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","                pipeline.fit(X_train, y_train)\n","                y_pred = pipeline.predict(X_test)\n","                y_prob = pipeline.predict_proba(X_test)[:, 1]\n","\n","                # Analyse de l'importance des variables\n","                st.subheader(\"Importance des variables\")\n","\n","                # R√©cup√©rer le Random Forest du pipeline\n","                rf = pipeline.named_steps['classifier']\n","                # R√©cup√©rer les noms des features apr√®s transformation\n","                feature_names = []\n","\n","                # Obtenir les noms des caract√©ristiques pour les variables num√©riques\n","                if numerical_cols:\n","                    feature_names.extend(numerical_cols)\n","\n","                st.subheader(\"Facteurs les plus influents\")\n","\n","                rf = pipeline.named_steps['classifier']\n","\n","                # D√©finir categorical_cols avant de l'utiliser\n","                categorical_cols = df.select_dtypes(include=['object']).columns.tolist()\n","                if 'TSA' in categorical_cols:\n","                    categorical_cols.remove('TSA')\n","                numerical_cols = df.select_dtypes(exclude=['object']).columns.tolist()\n","\n","                # R√©cup√©rer les noms des caract√©ristiques apr√®s transformation\n","                preprocessor = pipeline.named_steps['preprocessor']\n","                cat_features = []\n","                if hasattr(preprocessor.transformers_[1][1], 'get_feature_names_out'):\n","                    cat_features = preprocessor.transformers_[1][1].get_feature_names_out(categorical_cols).tolist()\n","                else:\n","                    # Fallback si get_feature_names_out n'est pas disponible\n","                    for col in categorical_cols:\n","                        unique_vals = df[col].unique()\n","                        cat_features.extend([f\"{col}_{val}\" for val in unique_vals[1:]])\n","\n","                all_features = numerical_cols + cat_features\n","                # Si la longueur des noms de caract√©ristiques ne correspond pas √† l'importance\n","                if len(all_features) != len(rf.feature_importances_):\n","                    all_features = [f\"Feature {i}\" for i in range(len(rf.feature_importances_))]\n","\n","                feature_importance = rf.feature_importances_\n","\n","                # Cr√©er DataFrame pour l'importance des variables\n","                importances = rf.feature_importances_\n","                fi_df = pd.DataFrame({\n","                    'Feature': all_features,\n","                    'Importance': importances\n","                }).sort_values('Importance', ascending=False)\n","\n","                # Afficher l'importance des variables\n","                fig, ax = plt.subplots(figsize=(10, 6))\n","                sns.barplot(\n","                    x='Importance',\n","                    y='Feature',\n","                    data=fi_df.head(15),\n","                    orient='h',\n","                    palette='viridis'\n","                )\n","                ax.set_title(\"Contribution des variables √† la pr√©diction\")\n","                st.pyplot(fig)\n","\n","                # √âvaluation des performances\n","                st.subheader(\"√âvaluation compl√®te des performances\")\n","                accuracy = accuracy_score(y_test, y_pred)\n","                precision = precision_score(y_test, y_pred)\n","                recall = recall_score(y_test, y_pred)\n","                f1 = f1_score(y_test, y_pred)\n","                auc = roc_auc_score(y_test, y_prob)\n","\n","                col1, col2, col3 = st.columns(3)\n","                with col1:\n","                    st.metric(\"Pr√©cision (Accuracy)\", f\"{accuracy:.2%}\")\n","                    st.metric(\"Rappel (Sensitivity)\", f\"{recall:.2%}\")\n","                with col2:\n","                    st.metric(\"Sp√©cificit√© (Precision)\", f\"{precision:.2%}\")\n","                    st.metric(\"Score F1\", f\"{f1:.2%}\")\n","                with col3:\n","                    st.metric(\"AUC-ROC\", f\"{auc:.2%}\")\n","                    st.metric(\"Erreur\", f\"{1-accuracy:.2%}\")\n","\n","                st.subheader(\"Matrice de confusion\")\n","                cm = confusion_matrix(y_test, y_pred)\n","                fig, ax = plt.subplots(figsize=(8, 6))\n","                sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', cbar=False)\n","                plt.xlabel('Pr√©diction')\n","                plt.ylabel('R√©alit√©')\n","                plt.title('Matrice de confusion')\n","                ax.set_xticklabels(['Non-TSA', 'TSA'])\n","                ax.set_yticklabels(['Non-TSA', 'TSA'])\n","                st.pyplot(fig)\n","\n","                st.subheader(\"Rapport de classification d√©taill√©\")\n","                report = classification_report(y_test, y_pred, output_dict=True)\n","                report_df = pd.DataFrame(report).transpose()\n","                st.dataframe(report_df.style.set_properties(**{'background-color': 'white'}))\n","\n","                st.header(\"Comparaison avec d'autres algorithmes\")\n","                models = {\n","                    \"R√©gression Logistique\": LogisticRegression(random_state=42, max_iter=1000),\n","                    \"XGBoost\": XGBClassifier(random_state=42),\n","                    \"LightGBM\": LGBMClassifier(random_state=42),\n","                    \"Random Forest\": RandomForestClassifier(n_estimators=100, random_state=42)\n","                }\n","\n","                results = []\n","                for name, model in models.items():\n","                    # Cr√©er un pipeline pour chaque mod√®le\n","                    curr_pipe = Pipeline([\n","                        ('preprocessor', preprocessor),\n","                        ('classifier', model)\n","                    ])\n","                    curr_pipe.fit(X_train, y_train)\n","                    y_pred_model = curr_pipe.predict(X_test)\n","                    acc = accuracy_score(y_test, y_pred_model)\n","                    f1score = f1_score(y_test, y_pred_model)\n","                    results.append({\n","                        'Mod√®le': name,\n","                        'Accuracy': acc,\n","                        'F1-Score': f1score\n","                    })\n","                results_df = pd.DataFrame(results)\n","                st.dataframe(results_df.style.highlight_max(subset=['Accuracy']))\n","\n","                fig, ax = plt.subplots(figsize=(10, 6))\n","                x = np.arange(len(results_df))\n","                width = 0.35\n","                ax.bar(x - width/2, results_df['Accuracy'], width, label='Accuracy')\n","                ax.bar(x + width/2, results_df['F1-Score'], width, label='F1-Score')\n","                ax.set_xticks(x)\n","                ax.set_xticklabels(results_df['Mod√®le'])\n","                ax.legend()\n","                ax.set_ylabel('Score')\n","                ax.set_title('Comparaison des performances des mod√®les')\n","                st.pyplot(fig)\n","\n","                st.markdown(\"\"\"\n","                    ### Analyse comparative des mod√®les\n","                    Les diff√©rents algorithmes test√©s pr√©sentent des performances variables:\n","                    1. **Random Forest** offre g√©n√©ralement le meilleur √©quilibre entre pr√©cision et robustesse, ce qui explique notre choix pour le mod√®le principal.\n","                    2. **XGBoost** montre d'excellentes performances et une grande pr√©cision de classification.\n","\n","                    3. **LightGBM** offre un bon compromis entre rapidit√© et pr√©cision, avec des r√©sultats tr√®s proches de XGBoost.\n","                    4. **R√©gression Logistique**, malgr√© sa simplicit√©, offre une baseline solide et une meilleure interpr√©tabilit√©.\n","\n","                    Le choix final du Random Forest est motiv√© par sa robustesse, sa capacit√© √† g√©rer efficacement les donn√©es mixtes apr√®s transformation par le pr√©processeur, et sa r√©sistance au surapprentissage.\n","                \"\"\")\n","        except Exception as e:\n","            st.error(f\"Erreur lors de la mod√©lisation : {str(e)}\")\n","            st.info(\"V√©rifiez que la pr√©paration des donn√©es a √©t√© effectu√©e correctement.\")\n","\n","elif \"üìù Test AQ-10\" in selection:\n","    st.markdown(\n","    f\"\"\"<div class=\"header-container\">\n","        <span style=\"font-size:2.5rem\">üìù</span>\n","        <h1 class=\"app-title\">Test AQ-10</h1>\n","    </div>\"\"\", unsafe_allow_html=True\n",")\n","\n","# Ajout du bandeau large juste sous le titre\n","    image_url = \"https://drive.google.com/file/d/1c2RrCChdmOv9IsGRY_T0i0QOgNB-oHt0/view?usp=sharing\"\n","    st.markdown(get_img_with_href(image_url, \"#\", as_banner=True), unsafe_allow_html=True)\n","\n","\n","\n","    st.markdown('<p class=\"questionnaire-title\">Questionnaire AQ-10</p>', unsafe_allow_html=True)\n","\n","    st.markdown(\"\"\"\n","    Ce questionnaire aide √† √©valuer les traits autistiques potentiels. R√©pondez de mani√®re aussi honn√™te que possible.\n","    Les r√©ponses ne sont pas stock√©es et servent uniquement √† l'analyse.\n","    \"\"\")\n","\n","    # Ajout d'emojis pour les questions\n","    questions = [\n","        {\"question\": \"üëÇ 1. Je remarque souvent de petits bruits que les autres ne remarquent pas.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 1, \"Plut√¥t d'accord\": 1, \"Plut√¥t pas d'accord\": 0, \"Pas du tout d'accord\": 0}},\n","        {\"question\": \"üîç 2. Je me concentre g√©n√©ralement davantage sur l'ensemble que sur les petits d√©tails.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"üîÑ 3. Je trouve facile de faire plusieurs choses en m√™me temps.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"‚èØÔ∏è 4. S'il y a une interruption, je peux rapidement reprendre ce que je faisais.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"üóØÔ∏è 5. Je trouve facile de ¬´ lire entre les lignes ¬ª quand quelqu'un me parle.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"üò¥ 6. Je sais comment savoir si la personne qui m'√©coute commence √† s'ennuyer.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"üìö 7. Quand je lis une histoire, j'ai du mal √† comprendre les intentions des personnages.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 1, \"Plut√¥t d'accord\": 1, \"Plut√¥t pas d'accord\": 0, \"Pas du tout d'accord\": 0}},\n","        {\"question\": \"üóÇÔ∏è 8. J'aime collecter des informations sur des cat√©gories de choses (par exemple : types de voitures, d'oiseaux, de trains, de plantes, etc.).\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 1, \"Plut√¥t d'accord\": 1, \"Plut√¥t pas d'accord\": 0, \"Pas du tout d'accord\": 0}},\n","        {\"question\": \"üòä 9. Je trouve facile de comprendre ce que quelqu'un pense ou ressent rien qu'en regardant son visage.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 0, \"Plut√¥t d'accord\": 0, \"Plut√¥t pas d'accord\": 1, \"Pas du tout d'accord\": 1}},\n","        {\"question\": \"‚ùì 10. J'ai du mal √† comprendre les intentions des gens.\",\n","         \"scoring\": {\"Tout √† fait d'accord\": 1, \"Plut√¥t d'accord\": 1, \"Plut√¥t pas d'accord\": 0, \"Pas du tout d'accord\": 0}}\n","    ]\n","\n","    responses = []\n","    for i, q in enumerate(questions):\n","        st.markdown(f'<div class=\"question-container\"><p class=\"question-text\">{q[\"question\"]}</p>', unsafe_allow_html=True)\n","        response = st.radio(\"\", list(q[\"scoring\"].keys()), key=f\"q{i}\", label_visibility=\"collapsed\")\n","        st.markdown('</div>', unsafe_allow_html=True)\n","        responses.append(q[\"scoring\"][response])\n","\n","\n","    # Button styling\n","    col1, col2, col3 = st.columns([1, 2, 1])\n","    with col2:\n","        calculate_button = st.button(\"Calculer mon score\", use_container_width=True)\n","\n","    if calculate_button:\n","        total = sum(responses)\n","        st.session_state.aq10_total = total\n","        st.session_state.aq10_responses = responses\n","\n","        result_col1, result_col2, result_col3 = st.columns([1, 3, 1])\n","        with result_col2:\n","            st.markdown(f\"\"\"\n","            <div style=\"background-color: white; padding: 25px; border-radius: 12px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); text-align: center; margin-top: 20px;\">\n","                <h2 style=\"margin-bottom: 15px; color: #3498db;\">R√©sultat : {total}/10</h2>\n","                <div style=\"height: 5px; background: linear-gradient(90deg, #3498db {total*10}%, #e0e0e0 {total*10}%); border-radius: 10px; margin-bottom: 20px;\"></div>\n","                {\"<p style='color: #e74c3c; font-size: 1.1rem;'><strong>Il serait recommand√© de consulter un professionnel</strong><br>Un score de 6 ou plus indique qu'une √©valuation approfondie par un sp√©cialiste de l'autisme pourrait √™tre b√©n√©fique.</p>\" if total >= 6 else \"<p style='color: #2ecc71; font-size: 1.1rem;'><strong>Aucun signe √©vident de traits autistiques</strong><br>Ce score sugg√®re qu'une √©valuation compl√©mentaire n'est pas n√©cessaire selon ce test.</p>\"}\n","                <p style=\"font-size: 0.9rem; color: #7f8c8d; margin-top: 15px;\"><em>Ce questionnaire est un outil de d√©pistage rapide bas√© sur l'AQ-10 d√©velopp√© par l'Universit√© de Cambridge.</em></p>\n","            </div>\n","            \"\"\", unsafe_allow_html=True)\n","\n","elif \"ü§ñ Pr√©diction par IA\" in selection:\n","    current_page = \"Pr√©diction par IA\"\n","    st.markdown(\n","        f\"\"\"<div class=\"header-container\">\n","            <span style=\"font-size:2.5rem\">ü§ñ</span>\n","            <h1 class=\"app-title\">Pr√©dire et expliquer le risque de TSA</h1>\n","        </div>\"\"\", unsafe_allow_html=True\n","    )\n","\n","    # Import de plotly pour des visualisations robustes\n","    import plotly.graph_objects as go\n","    import plotly.express as px\n","\n","    @st.cache_resource\n","    def train_advanced_model():\n","        if df.empty:\n","            return None, None, None\n","\n","        df_model = df.copy()\n","        if 'Jaunisse' in df_model.columns:\n","            df_model = df_model.drop(columns=['Jaunisse'])\n","        # S√©parer les variables num√©riques et cat√©gorielles\n","        categorical_cols = df_model.select_dtypes(include=['object']).columns.tolist()\n","        if 'TSA' in categorical_cols:\n","            categorical_cols.remove('TSA')\n","        numerical_cols = df_model.select_dtypes(exclude=['object']).columns.tolist()\n","        # D√©finir le pr√©processeur pour les donn√©es mixtes avec remainder='passthrough'\n","        preprocessor = ColumnTransformer(\n","            transformers=[\n","                ('num', StandardScaler(), numerical_cols),\n","                ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_cols)\n","            ],\n","            remainder='passthrough',  # Conserver les colonnes non sp√©cifi√©es\n","            verbose_feature_names_out=False\n","        )\n","\n","        X = df_model.drop(columns=['TSA'])\n","        y = df_model['TSA'].map({'Yes': 1, 'No': 0})\n","\n","        try:\n","            # Random Forest avec moins d'estimateurs pour acc√©l√©rer le traitement\n","            rf_model = RandomForestClassifier(\n","                n_estimators=50,  # R√©duit pour Google Colab\n","                max_depth=8,\n","                min_samples_split=10,\n","                min_samples_leaf=2,\n","                max_features='sqrt',  # Pour acc√©l√©rer\n","                random_state=42,\n","                n_jobs=-1  # Utiliser tous les c≈ìurs disponibles\n","            )\n","\n","            # Pr√©traiter X pour obtenir les noms de features transform√©s\n","            X_processed = preprocessor.fit_transform(X)\n","\n","            # Entra√Æner le mod√®le s√©par√©ment\n","            rf_model.fit(X_processed, y)\n","\n","            # Retourner les composants\n","            return rf_model, preprocessor, X.columns.tolist()\n","        except Exception as e:\n","            st.error(f\"Erreur lors de l'entra√Ænement du mod√®le: {str(e)}\")\n","            return None, None, None\n","\n","    # Fonction pour cr√©er la visualisation horizontale avec le risque\n","    def create_risk_visualization(risk_percentage):\n","        # Cr√©er la figure\n","        fig = go.Figure()\n","\n","        # Ajouter une barre horizontale de 0 √† 100%\n","        fig.add_trace(go.Bar(\n","            y=[\"Risque de TSA\"],\n","            x=[100],  # La barre couvre tout (0-100%)\n","            marker=dict(\n","                color='green',\n","                line=dict(color='green', width=1)\n","            ),\n","            orientation='h',\n","            showlegend=False,\n","            hoverinfo='none'\n","        ))\n","\n","        # Ajouter une ligne verticale √† la position du risque\n","        fig.add_shape(\n","            type=\"line\",\n","            x0=risk_percentage,\n","            y0=-0.4,  # Positionnement vertical pour centrer sur la barre\n","            x1=risk_percentage,\n","            y1=0.4,   # Positionnement vertical pour centrer sur la barre\n","            line=dict(\n","                color=\"red\",\n","                width=3,\n","                dash=\"solid\",\n","            )\n","        )\n","\n","        # Ajouter l'annotation pour le risque\n","        fig.add_annotation(\n","            x=risk_percentage,\n","            y=0,\n","            text=f\"{risk_percentage:.2f}%\",\n","            showarrow=True,\n","            arrowhead=2,\n","            arrowsize=1,\n","            arrowwidth=2,\n","            arrowcolor=\"red\",\n","            ax=0,\n","            ay=-30\n","        )\n","\n","        # Configurer la mise en page\n","        fig.update_layout(\n","            xaxis=dict(\n","                title=\"Pourcentage\",\n","                range=[0, 100],  # √âchelle de 0 √† 100%\n","                tickvals=[0, 25, 50, 75, 100],\n","                ticktext=[\"0%\", \"25%\", \"50%\", \"75%\", \"100%\"]\n","            ),\n","            yaxis=dict(\n","                showticklabels=False\n","            ),\n","            height=150,\n","            margin=dict(l=20, r=20, t=20, b=20),\n","            paper_bgcolor='rgba(0,0,0,0)',\n","            plot_bgcolor='rgba(0,0,0,0)'\n","        )\n","\n","        return fig\n","\n","    if not df.empty:\n","        with st.spinner(\"Pr√©paration du mod√®le...\"):\n","            model, preprocessor, feature_names = train_advanced_model()\n","\n","        st.subheader(\"Informations personnelles pour la pr√©diction\")\n","        col1, col2 = st.columns(2)\n","        with col1:\n","            age = st.number_input(\"√Çge\", min_value=1, max_value=100, value=30)\n","            genres = df['Genre'].unique().tolist()\n","            genre = st.selectbox(\"Genre\", options=genres)\n","            has_family_asd = st.selectbox(\"Cas d'autisme dans la famille\", options=[\"Yes\", \"No\"], index=1)\n","\n","            # Ajout de la variable statut_testeur\n","            statut_options = [\"Individu\", \"Parent\", \"Famille\", \"Professionnel\", \"Autre\"]\n","            statut_testeur = st.selectbox(\"Qui compl√®te le questionnaire?\", options=statut_options, index=0,\n","                                        help=\"Indique la personne qui remplit le questionnaire (vous-m√™me, un parent, etc.)\")\n","\n","            if 'Ethnie' in df.columns:\n","                ethnies = df['Ethnie'].dropna().unique().tolist()\n","                ethnie = st.selectbox(\"Ethnie\", options=ethnies)\n","        with col2:\n","            if st.session_state.aq10_total > 0:\n","                st.info(f\"Votre score AQ-10 : {st.session_state.aq10_total}/10\")\n","                st.info(\"Vos r√©ponses du test AQ-10 seront utilis√©es pour la pr√©diction\")\n","                use_aq10_responses = True\n","            else:\n","                st.warning(\"Vous n'avez pas compl√©t√© le questionnaire AQ-10\")\n","                st.info(\"Vous pouvez saisir manuellement vos r√©ponses ci-dessous\")\n","                use_aq10_responses = False\n","                aq_responses = {}\n","                for i in range(1, 11):\n","                    aq_responses[f'A{i}'] = st.selectbox(\n","                        f\"Question A{i}\", options=[0, 1], index=0, help=\"0 = Non, 1 = Oui\"\n","                    )\n","\n","        if st.button(\"Pr√©dire et expliquer le risque de TSA\", key=\"predict_button\"):\n","            if model and preprocessor:\n","                try:\n","                    # Cr√©er un dataframe pour la pr√©diction\n","                    test_data = {\n","                        'Age': [int(age)],\n","                        'Genre': [genre],\n","                        'Autisme_familial': [has_family_asd],\n","                        'Statut_testeur': [statut_testeur]  # Ajout du statut_testeur\n","                    }\n","\n","                    # Ajouter l'ethnie si pr√©sente\n","                    if 'Ethnie' in df.columns:\n","                        test_data['Ethnie'] = [ethnie]\n","\n","                    # Ajouter les r√©ponses aux questions A1-A10\n","                    if use_aq10_responses:\n","                        aq_responses = st.session_state.get(\"aq10_responses\", None)\n","                        if aq_responses is not None:\n","                            for i, response in enumerate(aq_responses):\n","                                test_data[f'A{i+1}'] = [response]\n","                            test_data['Score_A10'] = [sum(aq_responses)]\n","                        else:\n","                            st.error(\"Les r√©ponses AQ-10 ne sont pas disponibles. Merci de compl√©ter le test AQ-10 avant la pr√©diction.\")\n","                            st.stop()\n","\n","                    else:\n","                        # Utiliser les r√©ponses saisies manuellement\n","                        for i in range(1, 11):\n","                            test_data[f'A{i}'] = [aq_responses[f'A{i}']]\n","\n","                        # Calculer le Score_A10 comme somme des r√©ponses\n","                        test_data['Score_A10'] = [sum(aq_responses.values())]\n","\n","                    # Cr√©er le dataframe de test\n","                    test_df = pd.DataFrame(test_data)\n","\n","                    # Pr√©traiter les donn√©es\n","                    X_test_processed = preprocessor.transform(test_df)\n","\n","                    # Pr√©diction de probabilit√©\n","                    y_prob = model.predict_proba(X_test_processed)[0, 1]\n","\n","                    # Convertir en pourcentage\n","                    risk_percentage = y_prob * 100\n","\n","                    # Afficher le r√©sultat\n","                    st.header(\"R√©sultat de la pr√©diction\")\n","\n","\n","                    st.markdown(f\"### Probabilit√© de TSA: {risk_percentage:.2f}%\")\n","\n","\n","                    risk_fig = create_risk_visualization(risk_percentage)\n","                    st.plotly_chart(risk_fig, use_container_width=True)\n","\n","\n","                    col1, col2 = st.columns(2)\n","                    with col1:\n","                        st.markdown(\"#### Probabilit√© de TSA\")\n","\n","                        risk_color = \"red\" if risk_percentage > 50 else \"green\"\n","\n","\n","                        st.markdown(f\"<h2 style='color: {risk_color};'>{risk_percentage:.2f}%</h2>\", unsafe_allow_html=True)\n","\n","                    with col2:\n","                        st.markdown(\"#### Score AQ-10\")\n","                        score_value = test_data['Score_A10'][0]\n","                        st.metric(\n","                            \"Score\",\n","                            f\"{score_value}/10\",\n","                            delta=f\"{score_value - 5}\" if score_value != 5 else \"Seuil critique\",\n","                            delta_color=\"inverse\" if score_value > 5 else \"normal\"\n","                        )\n","\n","                    # Explication des r√©sultats\n","                    st.subheader(\"Explication du r√©sultat\")\n","                    st.markdown(f\"\"\"\n","                    Le mod√®le Random Forest a analys√© vos r√©ponses et vos informations personnelles pour\n","                    √©valuer le risque de Trouble du Spectre Autistique (TSA). Cette √©valuation est bas√©e\n","                    sur un mod√®le entra√Æn√© avec des donn√©es de plus de 5000 personnes.\n","\n","                    {'**Risque √©lev√© d√©tect√©** : Le score de probabilit√© de {risk_percentage:.2f}% indique un risque significatif. Une consultation avec un sp√©cialiste est recommand√©e.' if risk_percentage > 60 else ''}\n","                    {'**Risque mod√©r√© d√©tect√©** : Le score de probabilit√© de {risk_percentage:.2f}% indique un risque mod√©r√©. Un suivi pourrait √™tre b√©n√©fique.' if 40 <= risk_percentage <= 60 else ''}\n","                    {'**Risque faible d√©tect√©** : Le score de probabilit√© de {risk_percentage:.2f}% indique un risque faible. Aucune action imm√©diate''est n√©cessaire.' if risk_percentage < 40 else ''}\n","                    **Rappel important :** Cette pr√©diction est un outil d'aide et ne remplace pas un diagnostic m√©dical professionnel.\n","                    \"\"\")\n","\n","                    # MODIFICATION 2: Ajouter des visuels pertinents des variables les plus importantes\n","                    st.subheader(\"Facteurs les plus influents\")\n","\n","                    # R√©cup√©rer les importances des variables\n","                    feature_importances = model.feature_importances_\n","\n","                    # Obtenir les noms des features apr√®s transformation\n","                    if hasattr(preprocessor, 'get_feature_names_out'):\n","                        feature_names = preprocessor.get_feature_names_out()\n","                    else:\n","                        # Alternative si get_feature_names_out n'est pas disponible\n","                        feature_names = test_df.columns.tolist()\n","                        # Assurer que la longueur correspond\n","                        if len(feature_names) != len(feature_importances):\n","                            feature_names = [f\"Feature {i}\" for i in range(len(feature_importances))]\n","\n","                    # Cr√©er un DataFrame pour l'importance des variables\n","                    importance_df = pd.DataFrame({\n","                        'Variable': feature_names,\n","                        'Importance': feature_importances\n","                    }).sort_values('Importance', ascending=False).head(10)\n","\n","                    # Cr√©er la visualisation\n","                    fig = px.bar(\n","                        importance_df,\n","                        x='Importance',\n","                        y='Variable',\n","                        orientation='h',\n","                        color='Importance',\n","                        color_continuous_scale='Blues',\n","                        title=\"Contribution des variables √† la pr√©diction du TSA\"\n","                    )\n","                    fig.update_layout(\n","                        xaxis_title=\"Importance relative\",\n","                        yaxis_title=\"Variables\",\n","                        height=500,\n","                        margin=dict(l=20, r=20, t=40, b=20)\n","                    )\n","\n","                    st.plotly_chart(fig, use_container_width=True)\n","\n","                    # Ajouter une explication d√©taill√©e des variables\n","                    st.markdown(\"\"\"\n","                    ### Explication d√©taill√©e des variables importantes\n","\n","                    #### Score AQ-10\n","                    Le score total au questionnaire est l'indicateur le plus puissant. Ce score synth√©tise l'ensemble des r√©ponses\n","                    et repr√©sente un indicateur valid√© cliniquement pour le d√©pistage des TSA.\n","\n","                    #### Questions individuelles (A1-A10)\n","                    - **Questions A5, A6, A9**: Ces questions √©valuent sp√©cifiquement la compr√©hension sociale et la capacit√© √†\n","                      interpr√©ter les √©motions d'autrui, domaine particuli√®rement affect√© dans les TSA.\n","                    - **Questions A1, A8**: Ces questions mesurent l'attention aux d√©tails et les int√©r√™ts restreints,\n","                      caract√©ristiques fr√©quentes des profils autistiques.\n","\n","                    #### Facteurs d√©mographiques\n","                    - **√Çge**: L'√¢ge influence la manifestation des traits autistiques et leur impact sur la vie quotidienne.\n","                      Les strat√©gies compensatoires peuvent se d√©velopper avec l'√¢ge.\n","                    - **Genre**: Le ratio masculin/f√©minin observ√© dans l'autisme est d'environ 3:1, ce qui explique\n","                      l'importance mod√©r√©e de cette variable.\n","\n","                    #### Facteurs contextuels\n","                    - **Ant√©c√©dents familiaux**: La composante g√©n√©tique des TSA est significative, avec un risque plus\n","                      √©lev√© lorsqu'un membre de la famille proche est concern√©.\n","                    - **Statut du testeur**: La personne qui remplit le questionnaire peut influencer les r√©ponses et donc\n","                      le r√©sultat final.\n","\n","                    Cette analyse est bas√©e uniquement sur le mod√®le Random Forest sans recourir √† des biblioth√®ques\n","                    d'explicabilit√© comme SHAP ou LIME.\n","                    \"\"\")\n","\n","                except Exception as e:\n","                    st.error(f\"Erreur lors de la pr√©diction: {str(e)}\")\n","                    st.info(\"Veuillez v√©rifier que toutes les informations ont √©t√© correctement saisies.\")\n","            else:\n","                st.error(\"Le mod√®le n'a pas pu √™tre charg√©. Veuillez rafra√Æchir la page et r√©essayer.\")\n","\n","elif \"üìö Documentation\" in selection:\n","    current_page = \"Documentation\"\n","    st.markdown(\"\"\"\n","    <div class=\"header-container\">\n","        <span style=\"font-size:2.5rem\">üìö</span>\n","        <h1 class=\"app-title\">Documentation</h1>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    st.markdown(\"\"\"\n","    ## Documentation du projet TSA\n","\n","    Cette documentation d√©taille les composants techniques et scientifiques de notre application d'analyse des Troubles du Spectre Autistique (TSA).\n","\n","    ### 1. Sources de donn√©es\n","\n","    Nos donn√©es proviennent de cinq sources diff√©rentes:\n","    - L'universit√© de l'Arkansas (donn√©es nord-am√©ricaines)\n","    - Deux √©tudes du Manukau Institute of Technology (Nouvelle-Z√©lande) sur enfants et adultes\n","    - Un jeu de donn√©es d'Arabie Saoudite (506 sujets)\n","    - Un jeu mondial de 800 sujets\n","\n","    Au total, 5049 sujets composent notre dataset final apr√®s concat√©nation et uniformisation.\n","\n","    ### 2. Pr√©traitement des donn√©es\n","\n","    Le processus de nettoyage inclut:\n","    - Standardisation des noms de colonnes\n","    - Encodage des variables cat√©gorielles\n","    - Traitement des valeurs manquantes\n","    - Cr√©ation de la variable Score_A10 (somme des r√©ponses aux questions A1-A10)\n","\n","    ### 3. Mod√©lisation\n","    Notre approche de mod√©lisation s'est d√©roul√©e en plusieurs √©tapes:\n","\n","    1. **Analyse exploratoire** : FAMD pour visualiser les donn√©es et comprendre les relations\n","    2. **Mod√®le s√©lectionn√©** : Random Forest Classifier\n","    3. **Optimisation** : GridSearchCV pour l'ajustement des hyperparam√®tres:\n","       - max_depth: 10\n","       - max_features: None\n","       - min_samples_leaf: 1\n","       - min_samples_split: 10\n","       - n_estimators: 100\n","    4. **M√©triques de performance**:\n","       - Accuracy: 96.03%\n","       - Precision: 95.39%\n","       - Recall: 95.71%\n","       - F1 Score: 95.71%\n","\n","    ### 4. Variables importantes\n","\n","    D'apr√®s l'analyse du mod√®le, les variables les plus pr√©dictives sont:\n","    1. **Score_A10** : Score total au questionnaire (impact majeur)\n","    2. **Statut_testeur_Individu** : Si la personne √©valu√©e remplit elle-m√™me le questionnaire\n","    3. **Age** : √Çge de la personne √©valu√©e\n","    4. **Ethnie_WHITE_EUROPEAN** : Appartenance √† ce groupe ethnique\n","    5. **Ant√©c√©dents familiaux** : Pr√©sence d'autisme dans la famille\n","\n","    ### 5. Utilisation de l'application\n","\n","    1. **Test AQ-10** : Questionnaire standardis√© de 10 questions\n","    2. **Pr√©diction IA** : Utilisation du mod√®le Random Forest pour pr√©dire le risque de TSA\n","    3. **Exploration des donn√©es** : Visualisations interactives pour explorer les relations\n","\n","    ### 6. Ressources techniques\n","\n","    L'application est d√©velopp√©e avec:\n","    - **Streamlit** : Pour l'interface utilisateur\n","    - **Scikit-learn** : Pour les mod√®les de machine learning\n","    - **Plotly** : Pour les visualisations interactives\n","    - **Pandas & NumPy** : Pour la manipulation de donn√©es\n","\n","    ### 7. Consid√©rations √©thiques\n","    Notre application est un **outil d'aide √† la d√©cision** et non un dispositif de diagnostic m√©dical. Les r√©sultats doivent toujours √™tre interpr√©t√©s par des professionnels de sant√© qualifi√©s.\n","    \"\"\")\n","\n","\n","    st.markdown(\"---\")\n","    st.header(\"Ressources sur les Troubles du Spectre Autistique (TSA)\")\n","\n","    tab1, tab2, tab3 = st.tabs([\"Livres r√©cents\", \"Sites web et articles\", \"Vid√©os √©ducatives\"])\n","\n","    with tab1:\n","        st.markdown(\"\"\"\n","        ### Ouvrages r√©cents (2024-2025)\n","\n","        | Titre | Auteur(s) | Date de publication | Description |\n","        |-------|-----------|---------------------|-------------|\n","        | **Vivre avec un TSA, Les troubles du spectre autistique** | Elise Couval, Corinne Fr√©ville | Juin 2024 | Guide pratique sur la vie quotidienne avec TSA |\n","        | **Comment pense une personne autiste ?** | | Avril 2025 | Exploration des m√©canismes cognitifs sp√©cifiques aux personnes autistes |\n","        | **Des pierres, ils ont fait des √©toiles** | | Septembre 2024 | Approche po√©tique et humaine de l'autisme |\n","        | **L'autisme expliqu√© aux non autistes** | Brigitte Harrison, Lise St-Charles | Janvier 2020 | 50 questions pour mieux comprendre et accompagner |\n","        | **100 id√©es pour accompagner un enfant avec autisme** | Ren√© Pry | | Aborde la r√©alit√© des 120 000 enfants et adultes autistes en France |\n","        \"\"\")\n","\n","        st.info(\"Ces livres sont disponibles dans la plupart des librairies sp√©cialis√©es ou en ligne.\")\n","\n","    with tab2:\n","        st.markdown(\"\"\"\n","        ### Sites web de r√©f√©rence\n","\n","        - [Autisme Info Service](https://www.autismeinfoservice.fr/informer/autisme/tsa) - Portail d'information officiel sur les TSA\n","        - [Bibliosante - Cahier TSA 2024](https://bibliosante.ca/cahiers/cahier_spectre_autisme_2024.pdf) - Guide complet sur les TSA (√©dition 2024)\n","        - [Sensibilisation TSA - Mise √† jour 2024](https://www.calameo.com/books/0050508852a91c25d23a3) - Bibliographie actualis√©e\n","\n","        ### Articles scientifiques r√©cents\n","\n","        - **Avanc√©es en neuroimagerie des TSA** (2024) - Revue des derni√®res d√©couvertes sur les biomarqueurs c√©r√©braux\n","        - **Interventions pr√©coces et plasticit√© c√©r√©brale** (2025) - Impact des prises en charge avant 3 ans\n","        - **Outils num√©riques d'aide au diagnostic** (2025) - √âtat de l'art des applications d'IA pour le d√©pistage\n","        \"\"\")\n","\n","        st.warning(\"\"\"\n","        **Attention aux fausses informations**: L'id√©e selon laquelle l'autisme serait caus√© par les vaccins est\n","        r√©guli√®rement d√©mentie par la communaut√© scientifique. Des films comme \"Vaxxed\" propagent des th√©ories\n","        conspirationnistes bas√©es sur une √©tude frauduleuse et retir√©e.\n","        \"\"\")\n","\n","    with tab3:\n","        st.markdown(\"\"\"\n","        ### Vid√©os √©ducatives\n","\n","        1. **[Comprendre l'autisme en 10 minutes](https://www.youtube.com/)**\n","           Une vid√©o claire et concise expliquant les bases du TSA.\n","\n","        2. **[T√©moignages: Vivre avec l'autisme](https://www.youtube.com/)**\n","           Des personnes autistes partagent leurs exp√©riences quotidiennes.\n","\n","        3. **[Les avanc√©es de la recherche sur l'autisme en 2025](https://www.youtube.com/)**\n","           Un r√©sum√© des derni√®res d√©couvertes scientifiques.\n","\n","        4. **[Inclusion scolaire des enfants TSA](https://www.youtube.com/)**\n","           Strat√©gies p√©dagogiques adapt√©es et t√©moignages d'enseignants.\n","\n","        > *Remplacez les liens fictifs par des liens r√©els vers des vid√©os pertinentes.*\n","        \"\"\")\n","\n","elif \"‚ÑπÔ∏è √Ä propos\" in selection:\n","    current_page = \"√Ä propos\"\n","    st.markdown(\"\"\"\n","    <div class=\"header-container\">\n","        <span style=\"font-size:2.5rem\">‚ÑπÔ∏è</span>\n","        <h1 class=\"app-title\">√Ä propos</h1>\n","    </div>\n","    \"\"\", unsafe_allow_html=True)\n","\n","    st.markdown(\"\"\"\n","    ## √Ä propos du projet\n","\n","    Ce projet a √©t√© r√©alis√© dans le cadre d'une √©tude sur les m√©thodes de d√©pistage des Troubles du Spectre Autistique (TSA).\n","\n","    ### √âquipe de Projet\n","\n","    **Auteurs :**\n","    - Alexandre Bernard\n","    - R√©mi Chenouri\n","    - Ahmed Ibnabasse\n","    - Laurence Souppayaraza\n","\n","    ### Objectifs du Projet\n","\n","    1. Identifier les facteurs associ√©s √† la pr√©sence d'un TSA\n","    2. Explorer les donn√©es pour d√©celer des tendances et biais\n","    3. Construire des mod√®les pr√©dictifs pour l'√©valuation du TSA\n","    ### Remerciements\n","\n","    Nous remercions toutes les personnes ayant contribu√© √† ce projet, en particulier notre mentor Yohan Cohen pour son soutien et ses conseils pr√©cieux.\n","\n","    ### Contact\n","\n","    Pour toute question concernant ce projet, veuillez nous contacter √† l'adresse suivante:\n","    [contact@projet-autisme.org](mailto:contact@projet-autisme.org)\"\"\")\n","\n","    st.markdown(\"\"\"\n","    ### Licence\n","    Cette application est mise √† disposition sous licence open-source. Le code et les donn√©es anonymis√©es sont disponibles pour des fins de recherche uniquement.\"\"\")\n","\n","    image_url = \"https://drive.google.com/file/d/1tbARR43xi1GCnfY9XrEc-O2FbMnTmPcW/view?usp=sharing\"\n","    st.markdown(get_img_with_href(image_url, \"#\", as_banner=False), unsafe_allow_html=True)\n","\n","\n","    st.markdown(\"\"\"\n","    &copy; 2025 - Projet Autisme - Tous droits r√©serv√©s\n","    \"\"\")"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":63,"status":"ok","timestamp":1747318898393,"user":{"displayName":"R√©mi Chenouri","userId":"17434112223803583220"},"user_tz":-120},"id":"37LCQn6N-Ntu","outputId":"63849c5a-0e9c-4213-be4c-323493f87279"},"outputs":[{"output_type":"stream","name":"stdout","text":["NgrokTunnel: \"https://9456-35-189-173-65.ngrok-free.app\" -> \"http://localhost:8501\"\n"]}],"source":["public_url = ngrok.connect(8501)\n","print(public_url)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YDKWt_nTEkUV","outputId":"f6fc39b2-8876-4c83-cf80-89c5b550c08a"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.\n","\u001b[0m\n","\u001b[0m\n","\u001b[34m\u001b[1m  You can now view your Streamlit app in your browser.\u001b[0m\n","\u001b[0m\n","\u001b[34m  Local URL: \u001b[0m\u001b[1mhttp://localhost:8501\u001b[0m\n","\u001b[34m  Network URL: \u001b[0m\u001b[1mhttp://172.28.0.12:8501\u001b[0m\n","\u001b[34m  External URL: \u001b[0m\u001b[1mhttp://35.189.173.65:8501\u001b[0m\n","\u001b[0m\n","/content/Streamlit-Autisme.py:608: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df['Statut_testeur'].fillna('Famille', inplace=True)\n","Task exception was never retrieved\n","future: <Task finished name='Task-387' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-388' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-389' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-390' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-391' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-392' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-393' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-394' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-395' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-396' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-397' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-398' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-399' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-400' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-401' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-402' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-403' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-404' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-405' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-406' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-407' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-408' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-409' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-410' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-411' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-412' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-413' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-414' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-415' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n","Task exception was never retrieved\n","future: <Task finished name='Task-416' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/dist-packages/tornado/websocket.py:1086> exception=WebSocketClosedError()>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1088, in wrapper\n","    await fut\n","tornado.iostream.StreamClosedError: Stream is closed\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/tornado/websocket.py\", line 1090, in wrapper\n","    raise WebSocketClosedError()\n","tornado.websocket.WebSocketClosedError\n"]}],"source":["!streamlit run Streamlit-Autisme.py &"]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}